{"version":3,"file":"static/js/916.8a31e9a1.chunk.js","mappings":"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","sources":["components/PetBlock/PetBlock.jsx","helpers/validationSchemaAddPet.js","components/AddPetForm/AddPetForm.styled.jsx","components/AddPetForm/AddPetForm.jsx","helpers/formatDatePicker.js","pages/AddPet/AddPet.styled.jsx","pages/AddPet/AddPet.jsx","store/notices/selectors.js"],"sourcesContent":["import React from \"react\";\r\n\r\nconst PetBlock = ({ sources, defaultSrc, alt }) => {\r\n  return (\r\n    <>\r\n      <picture>\r\n        {sources.map((source, index) => (\r\n          <source\r\n            key={index}\r\n            srcSet={source.srcSet}\r\n            media={source.media}\r\n            width={source.width}\r\n          />\r\n        ))}\r\n        <img src={defaultSrc} alt={alt} />\r\n      </picture>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PetBlock;\r\n","import * as yup from \"yup\";\r\n\r\nexport const validatinSchemaAddPet = yup.object().shape({\r\n  title: yup.string().required(\"Title is required\"),\r\n  name: yup.string().required(\"Name is required\"),\r\n  imgURL: yup\r\n    .string()\r\n    .matches(\r\n      /^https?:\\/\\/.*\\.(?:png|jpg|jpeg|gif|bmp|webp)$/,\r\n      \"Invalid URL format\"\r\n    )\r\n    .required(\"Image URL is required\"),\r\n  species: yup.string().required(\"Species is required\"),\r\n  birthday: yup\r\n    .string()\r\n    .matches(/^\\d{4}-\\d{2}-\\d{2}$/, \"Invalid date format\")\r\n    .required(\"Birthday is required\"),\r\n  sex: yup.string().required(\"Sex is required\"),\r\n});\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\n\r\nexport const AddPetFormContainer = styled.div`\r\n  background-color: #ffffff;\r\n  border-radius: 30px;\r\n  padding: 28px 20px 20px;\r\n  margin: 10px 0 20px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    border-radius: 60px;\r\n    padding: 40px 136px 40px;\r\n    margin: 16px 0 32px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    margin: 0px;\r\n    width: 592px;\r\n    height: 654px;\r\n    padding: 60px 80px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.p`\r\n  font-size: 28px;\r\n  font-weight: 700;\r\n  line-height: 28px;\r\n  letter-spacing: -0.84px;\r\n  margin-bottom: 24px;\r\n\r\n  span {\r\n    color: rgba(43, 43, 42, 0.4);\r\n    font-size: 14px;\r\n    font-weight: 700;\r\n    line-height: 18px;\r\n    margin-left: 8px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 32px;\r\n    line-height: 32px;\r\n    letter-spacing: -0.96px;\r\n    margin-bottom: 40px;\r\n\r\n    span {\r\n      font-size: 16px;\r\n      line-height: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GendersList = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n\r\n  li {\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transition: transform 150ms linear;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    li {\r\n      width: 40px;\r\n      height: 40px;\r\n    }\r\n\r\n    svg {\r\n      width: 24px;\r\n      height: 24px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const FemaleLi = styled.li`\r\n  background-color: ${({ datavalue }) =>\r\n    datavalue === \"female\" ? \"#f43f5e\" : \"rgba(244, 63, 94, 0.10)\"};\r\n\r\n  svg {\r\n    fill: none;\r\n    stroke: ${({ datavalue }) =>\r\n      datavalue === \"female\" ? \"#FFFFFF\" : \"#f43f5e\"};\r\n    transition: transform 150ms linear, background-color 150ms linear;\r\n  }\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    background-color: #f43f5e;\r\n\r\n    svg {\r\n      stroke: #ffffff;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MaleLi = styled.li`\r\n  background-color: ${({ datavalue }) =>\r\n    datavalue === \"male\" ? \"#54adff\" : \"rgba(84, 173, 255, 0.10)\"};\r\n\r\n  svg {\r\n    fill: none;\r\n    stroke: ${({ datavalue }) =>\r\n      datavalue === \"male\" ? \"#FFFFFF\" : \"#54adff\"};\r\n    transition: transform 150ms linear, background-color 150ms linear;\r\n  }\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    background-color: #54adff;\r\n\r\n    svg {\r\n      stroke: #ffffff;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MultipleLi = styled.li`\r\n  background-color: ${({ datavalue }) =>\r\n    datavalue === \"multiple\" ? \"#F6B83D\" : \"#FFF4DF\"};\r\n\r\n  svg {\r\n    fill: ${({ datavalue }) =>\r\n      datavalue === \"multiple\" ? \"#FFFFFF\" : \"#F6B83D\"};\r\n    transition: transform 150ms linear, background-color 150ms linear;\r\n  }\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    background-color: #f6b83d;\r\n\r\n    svg {\r\n      fill: #ffffff;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Image = styled.div`\r\n  width: 68px;\r\n  height: 68px;\r\n  border-radius: 50%;\r\n  background-color: #fff4df;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 8px auto 16px;\r\n\r\n  img {\r\n    object-fit: cover;\r\n    border-radius: 50%;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 86px;\r\n    height: 86px;\r\n    margin: -18px auto 12px;\r\n\r\n    svg {\r\n      width: 44px;\r\n      height: 44px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    margin: -24px auto 12px;\r\n  }\r\n`;\r\n\r\nexport const UploadContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  margin-bottom: 12px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin-bottom: 18px;\r\n  }\r\n`;\r\n\r\nexport const InputLabel = styled.label`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 170px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 278px;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  position: relative;\r\n  width: 100%;\r\n  max-width: 117px;\r\n\r\n  svg {\r\n    position: absolute;\r\n    top: 3px;\r\n    right: 10px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 146px;\r\n\r\n    svg {\r\n      right: 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const InputPetImageURL = styled.input`\r\n  width: 100%;\r\n  height: 36px;\r\n  border-radius: 30px;\r\n  border: 1px solid rgba(38, 38, 38, 0.15);\r\n  padding: 9px 10px;\r\n  transition: border 150ms linear;\r\n\r\n  &::placeholder {\r\n    color: rgba(38, 38, 38, 0.5);\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    font-size: 14px;\r\n    line-height: 18px;\r\n    letter-spacing: -0.28px;\r\n  }\r\n\r\n  &:focus-within,\r\n  &:hover {\r\n    border: 1px solid #f6b83d;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    height: 42px;\r\n    padding: 12px;\r\n  }\r\n`;\r\n\r\nexport const AddAvatarInput = styled.input`\r\n  width: 100%;\r\n\r\n  &::-webkit-file-upload-button {\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    width: 1px !important;\r\n  }\r\n\r\n  &::before {\r\n    content: \"Upload photo\";\r\n    width: 117px;\r\n    height: 36px;\r\n    border-radius: 30px;\r\n    background-color: #fff4df;\r\n    color: #262626;\r\n    font-weight: 500;\r\n    font-size: 12px;\r\n    line-height: 16px;\r\n    letter-spacing: -0.24px;\r\n    cursor: pointer;\r\n    padding-left: 10px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: flex-start;\r\n    position: absolute;\r\n    top: -7px;\r\n    left: 0;\r\n    transition: background-color 150ms linear;\r\n  }\r\n\r\n  &:hover {\r\n    &::before {\r\n      background-color: #fbe7c1;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    &::before {\r\n      width: 146px;\r\n      height: 42px;\r\n      top: -10px;\r\n      font-size: 14px;\r\n      line-height: 18px;\r\n      letter-spacing: -0.28px;\r\n      padding-left: 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const InputWrap = styled.div`\r\n  margin-bottom: 12px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin-bottom: 18px;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 100%;\r\n  height: 42px;\r\n  border-radius: 30px;\r\n  border: 1px solid rgba(38, 38, 38, 0.15);\r\n  padding: 12px;\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n  letter-spacing: -0.42px;\r\n  transition: border 150ms linear;\r\n\r\n  &::placeholder {\r\n    color: rgba(38, 38, 38, 0.5);\r\n  }\r\n\r\n  &:focus-within,\r\n  &:hover {\r\n    border: 1px solid #f6b83d;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    height: 52px;\r\n    padding: 16px;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    letter-spacing: -0.48px;\r\n  }\r\n`;\r\n\r\nexport const InvisibleInput = styled.input`\r\n  overflow: hidden;\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  margin: -1px;\r\n  border: 0;\r\n  padding: 0;\r\n  white-space: nowrap;\r\n  clip-path: inset(100%);\r\n  clip: rect(0 0 0 0);\r\n`;\r\n\r\nexport const BoxContainer = styled.div`\r\n  display: flex;\r\n  gap: 8px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    gap: 12px;\r\n  }\r\n`;\r\n\r\nexport const DatePickerWrapper = styled.div`\r\n  position: relative;\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 12px;\r\n    top: 12px;\r\n    pointer-events: none;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 210px;\r\n\r\n    svg {\r\n      right: 16px;\r\n      top: 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const StyledDatePicker = styled(ReactDatePicker)`\r\n  border-radius: 30px;\r\n  border: 1px solid rgba(38, 38, 38, 0.15);\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n  letter-spacing: -0.42px;\r\n  padding: 12px;\r\n  max-width: 144px;\r\n  min-width: 116px;\r\n  width: 100%;\r\n  height: 42px;\r\n  cursor: pointer;\r\n  transition: border 150ms linear;\r\n\r\n  &:focus-within,\r\n  &:hover {\r\n    border: 1px solid #f6b83d;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 210px;\r\n    height: 52px;\r\n  }\r\n`;\r\n\r\nexport const SelectContainer = styled.div`\r\n  position: relative;\r\n  width: 143px;\r\n\r\n  svg {\r\n    position: absolute;\r\n    top: 12px;\r\n    right: 12px;\r\n  }\r\n\r\n  .css-tj5bde-Svg {\r\n    display: none;\r\n  }\r\n\r\n  .css-1u9des2-indicatorSeparator {\r\n    display: none;\r\n  }\r\n\r\n  .css-1xc3v61-indicatorContainer {\r\n    padding: 0;\r\n  }\r\n\r\n  .css-1fdsijx-ValueContainer {\r\n    padding: 0;\r\n  }\r\n\r\n  .css-b62m3t-container {\r\n    width: 100%;\r\n  }\r\n\r\n  .css-13cymwt-control {\r\n    border-radius: 30px;\r\n    border: 1px solid rgba(38, 38, 38, 0.15);\r\n    color: rgba(38, 38, 38, 0.5);\r\n    font-size: 14px;\r\n    line-height: 18px;\r\n    letter-spacing: -0.42px;\r\n    height: 42px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .css-13cymwt-control:hover {\r\n    border-color: transparent;\r\n    height: 42px;\r\n    cursor: pointer;\r\n    transition: border 150ms linear;\r\n\r\n    &:focus-within,\r\n    &:hover {\r\n      border: 1px solid #f6b83d;\r\n    }\r\n  }\r\n\r\n  .css-t3ipsp-control {\r\n    border-radius: 30px;\r\n    border-color: #f6b83d;\r\n    box-shadow: none;\r\n    height: 42px;\r\n  }\r\n\r\n  .css-t3ipsp-control:hover,\r\n  .css-t3ipsp-control:active {\r\n    border-radius: 30px;\r\n    border-color: transparent;\r\n    transition: border 150ms linear;\r\n\r\n    &:focus-within,\r\n    &:hover {\r\n      border: 1px solid #f6b83d;\r\n    }\r\n  }\r\n\r\n  .css-1dimb5e-singleValue {\r\n    margin-left: 12px;\r\n  }\r\n\r\n  .css-1jqq78o-placeholder {\r\n    margin-left: 12px;\r\n    color: unset;\r\n  }\r\n\r\n  .css-qbdosj-Input {\r\n    margin-left: 12px;\r\n  }\r\n\r\n  .css-1u9des2-indicatorSeparator {\r\n    display: none;\r\n  }\r\n\r\n  .css-1xc3v61-indicatorContainer {\r\n    display: none;\r\n  }\r\n\r\n  .css-1xc3v61-indicatorContainer {\r\n    padding: 12px 12px 12px 0;\r\n    color: #262626;\r\n  }\r\n\r\n  .css-1fdsijx-ValueContainer {\r\n    font-size: 14px;\r\n    line-height: 18px;\r\n    letter-spacing: -0.42px;\r\n  }\r\n\r\n  .css-tr4s17-option {\r\n    color: #f6b83d;\r\n    background-color: transparent;\r\n    padding: 0;\r\n  }\r\n\r\n  .css-10wo9uf-option {\r\n    padding: 0;\r\n  }\r\n\r\n  .css-d7l1ni-option {\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    padding: 0;\r\n    color: #f6b83d;\r\n  }\r\n\r\n  .css-d7l1ni-option:hover,\r\n  .css-d7l1ni-option:active {\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .css-1nmdiq5-menu {\r\n    border-radius: 15px;\r\n    box-shadow: none;\r\n    margin-top: 4px;\r\n  }\r\n\r\n  .css-1n6sfyn-MenuList {\r\n    color: rgba(38, 38, 38, 0.6);\r\n    font-size: 14px;\r\n    line-height: 18px;\r\n    letter-spacing: -0.42px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 12px;\r\n    gap: 8px;\r\n    max-height: 78px;\r\n    border-radius: 15px;\r\n    border: 1px solid rgba(38, 38, 38, 0.15);\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    position: relative;\r\n    width: 210px;\r\n\r\n    svg {\r\n      position: absolute;\r\n      top: 16px;\r\n      right: 16px;\r\n    }\r\n\r\n    .css-13cymwt-control {\r\n      max-width: 210px;\r\n      height: 52px;\r\n    }\r\n\r\n    .css-t3ipsp-control {\r\n      height: 52px;\r\n    }\r\n\r\n    .css-13cymwt-control:hover {\r\n      height: 52px;\r\n    }\r\n\r\n    .css-1n6sfyn-MenuList {\r\n      max-height: 126px;\r\n      font-size: 16px;\r\n      line-height: 20px;\r\n      letter-spacing: -0.48px;\r\n      padding: 14px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Error = styled.p`\r\n  position: absolute;\r\n  font-size: 10px;\r\n  color: #e44848;\r\n`;\r\n\r\nexport const ButtonWrap = styled.div`\r\n  display: flex;\r\n  justify-content: right;\r\n  align-items: center;\r\n  gap: 8px;\r\n  margin-top: 31px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin-top: 40px;\r\n  }\r\n`;\r\n\r\nexport const ButtonBack = styled(Link)`\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  line-height: 18px;\r\n  letter-spacing: -0.42px;\r\n  padding: 12px 34px;\r\n  border-radius: 30px;\r\n  background-color: rgba(38, 38, 38, 0.05);\r\n  cursor: pointer;\r\n  transition: background-color 150ms linear, transform 150ms linear;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    background-color: #fbe7c1;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding: 14px 67px;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    letter-spacing: -0.48px;\r\n  }\r\n`;\r\n\r\nexport const ButtonSubmit = styled.button`\r\n  color: #ffffff;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  line-height: 18px;\r\n  letter-spacing: -0.42px;\r\n  padding: 12px 26px;\r\n  border-radius: 30px;\r\n  background-color: #f6b83d;\r\n  cursor: pointer;\r\n  transition: background-color 150ms linear, transform 150ms linear;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    background-color: #f9b020;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding: 14px 58px;\r\n    font-size: 16px;\r\n    font-weight: 700;\r\n    line-height: 20px;\r\n    letter-spacing: -0.48px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { refreshUser, userAddPet } from \"../../store/auth/operations\";\r\nimport { selectTypes } from \"../../store/notices/selectors\";\r\nimport { getTypes } from \"../../store/notices/operations\";\r\nimport { Controller, useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { handleDatePicker } from \"../../helpers/formatDatePicker\";\r\nimport { validatinSchemaAddPet } from \"../../helpers/validationSchemaAddPet\";\r\nimport Select from \"react-select\";\r\nimport sprite from \"../../images/sprite.svg\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"./styles.css\";\r\nimport {\r\n  AddAvatarInput,\r\n  AddPetFormContainer,\r\n  BoxContainer,\r\n  DatePickerWrapper,\r\n  Error,\r\n  FemaleLi,\r\n  GendersList,\r\n  Image,\r\n  Input,\r\n  InputPetImageURL,\r\n  InputWrap,\r\n  InvisibleInput,\r\n  Label,\r\n  MaleLi,\r\n  MultipleLi,\r\n  Title,\r\n  UploadContainer,\r\n  StyledDatePicker,\r\n  SelectContainer,\r\n  ButtonBack,\r\n  ButtonSubmit,\r\n  ButtonWrap,\r\n  InputLabel,\r\n} from \"./AddPetForm.styled\";\r\n\r\nconst AddPetForm = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const [sexPet, setSexPet] = useState(\"unknown\");\r\n  const [petType, setPetType] = useState(null);\r\n  const [birthDate, setBirthDate] = useState(null);\r\n  const [petImageURL, setPetImageURL] = useState(\"\");\r\n\r\n  const species = useSelector(selectTypes);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    formState: { errors },\r\n    control,\r\n  } = useForm({\r\n    resolver: yupResolver(validatinSchemaAddPet),\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getTypes());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (sexPet !== \"unknown\") {\r\n      setValue(\"sex\", sexPet);\r\n    }\r\n\r\n    if (petType) {\r\n      setValue(\"species\", petType);\r\n    }\r\n\r\n    if (birthDate) {\r\n      setValue(\"birthday\", birthDate);\r\n    }\r\n  }, [birthDate, petType, setValue, sexPet]);\r\n\r\n  const cloudURL = process.env.REACT_APP_CLOUDINARY_URL;\r\n  const upload_preset = process.env.REACT_APP_UPLOAD_PRESET;\r\n\r\n  const handleUploadAvatar = (event) => {\r\n    const file = event.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"upload_preset\", upload_preset);\r\n    fetch(cloudURL, { method: \"POST\", body: formData })\r\n      .then((res) => {\r\n        if (!res.ok) {\r\n          throw new Error(\"Upload failed\");\r\n        }\r\n        return res.json();\r\n      })\r\n      .then((data) => {\r\n        const fileURL = URL.createObjectURL(file);\r\n        setPetImageURL(fileURL);\r\n        setValue(\"imgURL\", data.secure_url);\r\n      })\r\n      .catch((error) => console.log(\"Upload error:\", error.message));\r\n  };\r\n\r\n  const handleChooseSex = (event) => {\r\n    const choosenValue = event.currentTarget.dataset.value;\r\n    setSexPet(choosenValue);\r\n  };\r\n\r\n  const speciesData = [\r\n    ...species?.map((item) => ({\r\n      value: item,\r\n      label: item.charAt(0).toUpperCase() + item.slice(1),\r\n    })),\r\n  ];\r\n\r\n  const handleByType = (event) => setPetType(event.value);\r\n\r\n  const selectValue =\r\n    petType === null\r\n      ? null\r\n      : speciesData?.find((option) => option.value === petType);\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(userAddPet(data));\r\n    dispatch(refreshUser());\r\n    navigate(\"/profile\");\r\n  };\r\n\r\n  return (\r\n    <AddPetFormContainer>\r\n      <Title>\r\n        Add my pet /<span>Personal details</span>\r\n      </Title>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <GendersList>\r\n          <FemaleLi\r\n            data-value=\"female\"\r\n            onClick={handleChooseSex}\r\n            datavalue={sexPet}\r\n          >\r\n            <svg width=\"20\" height=\"20\" datavalue={sexPet}>\r\n              <use href={`${sprite}#icon-female`}></use>\r\n            </svg>\r\n          </FemaleLi>\r\n          <MaleLi\r\n            data-value=\"male\"\r\n            onClick={handleChooseSex}\r\n            datavalue={sexPet}\r\n          >\r\n            <svg width=\"20\" height=\"20\" datavalue={sexPet}>\r\n              <use href={`${sprite}#icon-male`}></use>\r\n            </svg>\r\n          </MaleLi>\r\n          <MultipleLi\r\n            data-value=\"multiple\"\r\n            onClick={handleChooseSex}\r\n            datavalue={sexPet}\r\n          >\r\n            <svg width=\"20\" height=\"20\" datavalue={sexPet}>\r\n              <use href={`${sprite}#icon-reproductive`}></use>\r\n            </svg>\r\n          </MultipleLi>\r\n        </GendersList>\r\n\r\n        <InvisibleInput type=\"text\" {...register(\"sex\")} />\r\n        {errors.sex && <Error>{errors.sex.message}</Error>}\r\n\r\n        <Image>\r\n          {petImageURL !== \"\" ? (\r\n            <img src={petImageURL} alt=\"Pet's avatar\" />\r\n          ) : (\r\n            <svg width=\"34\" height=\"34\">\r\n              <use href={`${sprite}#icon-foot-print`}></use>\r\n            </svg>\r\n          )}\r\n        </Image>\r\n\r\n        <UploadContainer>\r\n          <InputLabel>\r\n            <InputPetImageURL\r\n              type=\"text\"\r\n              {...register(\"imgURL\")}\r\n              placeholder=\"Enter URL\"\r\n            />\r\n            {errors.imgURL && <Error>{errors.imgURL.message}</Error>}\r\n          </InputLabel>\r\n          <Label>\r\n            <AddAvatarInput\r\n              type=\"file\"\r\n              name=\"avatarFile\"\r\n              onChange={handleUploadAvatar}\r\n            />\r\n            <svg width=\"16\" height=\"16\">\r\n              <use href={`${sprite}#icon-upload-cloud`}></use>\r\n            </svg>\r\n          </Label>\r\n        </UploadContainer>\r\n\r\n        <InputWrap>\r\n          <Input type=\"text\" {...register(\"title\")} placeholder=\"Title\" />\r\n          {errors.title && <Error>{errors.title.message}</Error>}\r\n        </InputWrap>\r\n\r\n        <InputWrap>\r\n          <Input type=\"text\" {...register(\"name\")} placeholder=\"Pet's Name\" />\r\n          {errors.name && <Error>{errors.name.message}</Error>}\r\n        </InputWrap>\r\n\r\n        <BoxContainer>\r\n          <div>\r\n            <Controller\r\n              control={control}\r\n              name=\"birthday\"\r\n              render={({ field }) => (\r\n                <DatePickerWrapper>\r\n                  <StyledDatePicker\r\n                    {...field}\r\n                    calendarStartDay={1}\r\n                    selected={field.value ? new Date(field.value) : null}\r\n                    dateFormat=\"yyyy-MM-dd\"\r\n                    onChange={(date) =>\r\n                      handleDatePicker(date, setBirthDate, setValue)\r\n                    }\r\n                    placeholderText=\"0000-00-00\"\r\n                    autoComplete=\"off\"\r\n                  />\r\n                  <svg width=\"18\" height=\"18\" fill=\"none\" stroke=\"currentColor\">\r\n                    <use href={`${sprite}#icon-calendar`} />\r\n                  </svg>\r\n                </DatePickerWrapper>\r\n              )}\r\n            />\r\n            <InvisibleInput type=\"text\" {...register(\"birthday\")} />\r\n            {errors.birthday && <Error>{errors.birthday.message}</Error>}\r\n          </div>\r\n\r\n          <SelectContainer>\r\n            <Select\r\n              value={selectValue}\r\n              onChange={handleByType}\r\n              options={speciesData}\r\n              placeholder={\"Type of pet\"}\r\n              isClearable\r\n            />\r\n            <svg width=\"18\" height=\"18\" fill=\"none\" stroke=\"currentColor\">\r\n              <use href={`${sprite}#icon-arrow-down`} />\r\n            </svg>\r\n            <InvisibleInput type=\"text\" {...register(\"species\")} />\r\n            {errors.species && <Error>{errors.species.message}</Error>}\r\n          </SelectContainer>\r\n        </BoxContainer>\r\n\r\n        <ButtonWrap>\r\n          <ButtonBack to={\"/profile\"}>Back</ButtonBack>\r\n          <ButtonSubmit type=\"submit\">Submit</ButtonSubmit>\r\n        </ButtonWrap>\r\n      </form>\r\n    </AddPetFormContainer>\r\n  );\r\n};\r\n\r\nexport default AddPetForm;\r\n","export const handleDatePicker = (date, setBirthDate, setValue) => {\r\n  if (!date) return \"\";\r\n\r\n  const year = date.getFullYear();\r\n\r\n  const month = String(date.getMonth() + 1).padStart(2, \"0\");\r\n\r\n  const day = String(date.getDate()).padStart(2, \"0\");\r\n\r\n  const formattedDate = `${year}-${month}-${day}`;\r\n\r\n  setBirthDate(formattedDate);\r\n\r\n  setValue(\"birthday\", formattedDate);\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const AddPetContainer = styled.div`\r\n  @media screen and (min-width: 1280px) {\r\n    display: flex;\r\n    gap: 32px;\r\n    margin-bottom: 32px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport AddPetForm from \"../../components/AddPetForm/AddPetForm\";\r\nimport PetBlock from \"../../components/PetBlock/PetBlock\";\r\nimport addPetMob from \"../../images/add-pet-mob.png\";\r\nimport addPetMob2x from \"../../images/add-pet-mob@2x.png\";\r\nimport addPetTab from \"../../images/add-pet-tab.png\";\r\nimport addPetTab2x from \"../../images/add-pet-tab@2x.png\";\r\nimport addPetDesk from \"../../images/add-pet-desk.png\";\r\nimport addPetDesk2x from \"../../images/add-pet-desk@2x.png\";\r\nimport { AddPetContainer } from \"./AddPet.styled\";\r\n\r\nconst AddPet = () => {\r\n  const sources = [\r\n    {\r\n      srcSet: `${addPetMob}, ${addPetMob2x} 2x`,\r\n      media: \"(max-width: 767px)\",\r\n      width: 335,\r\n    },\r\n    {\r\n      srcSet: `${addPetTab}, ${addPetTab2x} 2x`,\r\n      media: \"(min-width: 768px) and (max-width: 1279px)\",\r\n      width: 704,\r\n    },\r\n    {\r\n      srcSet: `${addPetDesk}, ${addPetDesk2x} 2x`,\r\n      media: \"(min-width: 1280px)\",\r\n      width: 592,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <AddPetContainer>\r\n      <PetBlock\r\n        sources={sources}\r\n        defaultSrc={addPetDesk}\r\n        alt=\"dog with glasses\"\r\n      />\r\n      <AddPetForm />\r\n    </AddPetContainer>\r\n  );\r\n};\r\n\r\nexport default AddPet;\r\n","export const selectNotices = (state) => state.notices.notices;\r\n\r\nexport const selectCategories = (state) => state.notices.categories;\r\n\r\nexport const selectGenders = (state) => state.notices.genders;\r\n\r\nexport const selectTypes = (state) => state.notices.species;\r\n\r\nexport const selectLocations = (state) => state.notices.locations;\r\n\r\nexport const selectTotalPages = (state) => state.notices.totalPages;\r\n"],"names":["_ref","sources","defaultSrc","alt","_jsx","_Fragment","children","_jsxs","map","source","index","srcSet","media","width","src","validatinSchemaAddPet","yup","shape","title","required","name","imgURL","matches","species","birthday","sex","AddPetFormContainer","styled","div","_templateObject","_taggedTemplateLiteral","Title","p","_templateObject2","GendersList","ul","_templateObject3","FemaleLi","li","_templateObject4","datavalue","_ref2","MaleLi","_templateObject5","_ref3","_ref4","MultipleLi","_templateObject6","_ref5","_ref6","Image","_templateObject7","UploadContainer","_templateObject8","InputLabel","label","_templateObject9","Label","_templateObject10","InputPetImageURL","input","_templateObject11","AddAvatarInput","_templateObject12","InputWrap","_templateObject13","Input","_templateObject14","InvisibleInput","_templateObject15","BoxContainer","_templateObject16","DatePickerWrapper","_templateObject17","StyledDatePicker","ReactDatePicker","_templateObject18","SelectContainer","_templateObject19","Error","_templateObject20","ButtonWrap","_templateObject21","ButtonBack","Link","_templateObject22","ButtonSubmit","button","_templateObject23","AddPetForm","dispatch","useDispatch","navigate","useNavigate","sexPet","setSexPet","useState","petType","setPetType","birthDate","setBirthDate","petImageURL","setPetImageURL","useSelector","selectTypes","register","handleSubmit","setValue","formState","errors","control","useForm","resolver","yupResolver","useEffect","getTypes","handleChooseSex","event","choosenValue","currentTarget","dataset","value","speciesData","item","charAt","toUpperCase","slice","selectValue","find","option","onSubmit","data","userAddPet","refreshUser","onClick","height","href","concat","sprite","type","message","placeholder","onChange","file","target","files","formData","FormData","append","process","fetch","method","body","then","res","ok","json","fileURL","URL","createObjectURL","secure_url","catch","error","console","log","Controller","render","field","calendarStartDay","selected","Date","dateFormat","date","handleDatePicker","year","getFullYear","month","String","getMonth","padStart","day","getDate","formattedDate","placeholderText","autoComplete","fill","stroke","Select","options","isClearable","to","AddPetContainer","AddPet","addPetMob","addPetMob2x","addPetTab","addPetTab2x","addPetDesk","addPetDesk2x","PetBlock","selectNotices","state","notices","selectCategories","categories","selectGenders","genders","selectLocations","locations","selectTotalPages","totalPages"],"sourceRoot":""}