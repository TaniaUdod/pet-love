{"version":3,"file":"static/js/702.5b39119b.chunk.js","mappings":"yIAEA,MAkBA,EAlBiBA,IAAmC,IAAlC,QAAEC,EAAO,WAAEC,EAAU,IAAEC,GAAKH,EAC5C,OACEI,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAAA,WAAAD,SAAA,CACGL,EAAQO,KAAI,CAACC,EAAQC,KACpBN,EAAAA,EAAAA,KAAA,UAEEO,OAAQF,EAAOE,OACfC,MAAOH,EAAOG,MACdC,MAAOJ,EAAOI,OAHTH,MAMTN,EAAAA,EAAAA,KAAA,OAAKU,IAAKZ,EAAYC,IAAKA,QAE5B,C,0DCdA,MAAMY,E,QAAYC,GAAOC,EAACC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kO,aCCjC,MAQA,EARcnB,IAAe,IAAd,KAAEoB,GAAMpB,EACrB,OACEI,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAACW,EAAS,CAAAT,SAAEc,KACX,C,8KCLA,MAAMC,EAAYL,EAAAA,GAAOM,IAAGJ,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sIAUtBI,EAAQP,EAAAA,GAAOQ,MAAKC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,4bAQ1BO,GAAWA,EAAMC,SAAW,UAAY,2BAC1B3B,IAAA,IAAC,OAAE4B,GAAQ5B,EAAA,OAC5B4B,EAAS,UAAY,wBAAwB,IAepCC,EAAQb,EAAAA,GAAOC,EAACa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,mSAgBhBY,EAAgBf,EAAAA,GAAOC,EAACe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,mSAgBxBc,EAAYjB,EAAAA,GAAOM,IAAGY,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,mSAqBtBgB,EAAenB,EAAAA,GAAOM,IAAGc,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,8iBAsCzBkB,EAASrB,EAAAA,GAAOsB,OAAMC,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,2mB,aC/GnC,MA8FA,EA9FkBqB,KAChB,MAAOC,EAAmBC,IAAwBC,EAAAA,EAAAA,WAAS,IACpDC,EAAgBC,IAAqBF,EAAAA,EAAAA,UAAS,GAE/CG,EAAuBA,KAC3BJ,GAAsBK,IAAeA,GAAU,EAO3CC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAEJG,QACC,+CACA,uBAEDC,SAAS,uBACZC,SAAUL,EAAAA,KAEPM,IAAI,EAAG,0CACPF,SAAS,2BAGR,SACJG,EAAQ,aACRC,EACAC,WAAW,OAAEC,KACXC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYd,KAGlBe,GAAWC,EAAAA,EAAAA,MAOjB,OACEzD,EAAAA,EAAAA,MAAA,QAAM0D,SAAUR,GANAS,IAChB,MAAM,MAAEf,EAAK,SAAEG,GAAaY,EAC5BH,GAASI,EAAAA,EAAAA,IAAM,CAAEhB,QAAOG,aAAY,IAIGhD,SAAA,EACrCC,EAAAA,EAAAA,MAACc,EAAS,CAAAf,SAAA,EACRC,EAAAA,EAAAA,MAAC0B,EAAS,CAAA3B,SAAA,EACRF,EAAAA,EAAAA,KAACmB,EAAK,CACJ6C,YAAY,WACRZ,EAAS,SACb7B,SAAUgC,EAAOR,QAElBQ,EAAOR,QACN/C,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,OAAKiE,KAAI,GAAAC,OAAKC,EAAAA,EAAM,uBAGvBZ,EAAOR,QAAS/C,EAAAA,EAAAA,KAACyB,EAAK,CAAAvB,SAAEqD,EAAOR,MAAMqB,cAGxCjE,EAAAA,EAAAA,MAAC4B,EAAY,CAAA7B,SAAA,EACXF,EAAAA,EAAAA,KAACmB,EAAK,CACJkD,KAAMhC,EAAoB,OAAS,WACnC2B,YAAY,cACRZ,EAAS,YACbkB,SAvDoBC,IAC5B9B,EAAkB8B,EAAMC,OAAOC,MAAMC,OAAO,IAyDrCrC,GACCrC,EAAAA,EAAAA,KAAA,OAAK2E,KAAK,UAAUC,QAASlC,EAAqBxC,UAChDF,EAAAA,EAAAA,KAAA,OAAKiE,KAAI,GAAAC,OAAKC,EAAAA,EAAM,kBAGtBnE,EAAAA,EAAAA,KAAA,OAAK4E,QAASlC,EAAqBxC,UACjCF,EAAAA,EAAAA,KAAA,OAAKiE,KAAI,GAAAC,OAAKC,EAAAA,EAAM,qBAGvBZ,EAAOL,UAAYV,EAAiB,IACnCxC,EAAAA,EAAAA,KAACyB,EAAK,CAAAvB,SAAEqD,EAAOL,SAASkB,UAEzB5B,GAAkB,KACjBrC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAAE,UACEF,EAAAA,EAAAA,KAAA,OAAKiE,KAAI,GAAAC,OAAKC,EAAAA,EAAM,oBAEtBnE,EAAAA,EAAAA,KAAC2B,EAAa,CAAAzB,SAAC,iCAMvBF,EAAAA,EAAAA,KAACiC,EAAM,CAACoC,KAAK,SAAQnE,SAAC,aACjB,E,iUCxGJ,MAAM2E,EAAYjE,EAAAA,GAAOM,IAAGJ,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wHAQtB+D,EAAiBlE,EAAAA,GAAOM,IAAGG,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,uXAoB3BgE,EAAOnE,EAAAA,GAAOC,EAACa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,gXAoBfiE,EAAWpE,EAAAA,GAAOC,EAACe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,iTAgBnBkE,GAAarE,EAAAA,EAAAA,IAAOsE,EAAAA,GAAPtE,CAAYkB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,yRCZtC,EArCcoE,KACZ,MAAMtF,EAAU,CACd,CACEU,OAAO,GAAD2D,OAAKkB,EAAQ,MAAAlB,OAAKmB,EAAU,OAClC7E,MAAO,qBACPC,MAAO,KAET,CACEF,OAAO,GAAD2D,OAAKoB,EAAQ,MAAApB,OAAKqB,EAAU,OAClC/E,MAAO,6CACPC,MAAO,KAET,CACEF,OAAO,GAAD2D,OAAKsB,EAAS,MAAAtB,OAAKuB,EAAW,OACpCjF,MAAO,sBACPC,MAAO,MAIX,OACEN,EAAAA,EAAAA,MAAC0E,EAAS,CAAA3E,SAAA,EACRF,EAAAA,EAAAA,KAAC0F,EAAAA,EAAQ,CAAC7F,QAASA,EAASC,WAAY0F,EAAWzF,IAAI,SACvDI,EAAAA,EAAAA,MAAC2E,EAAc,CAAA5E,SAAA,EACbF,EAAAA,EAAAA,KAAC2F,EAAAA,EAAK,CAAC3E,KAAK,YACZhB,EAAAA,EAAAA,KAAC+E,EAAI,CAAA7E,SAAC,sEAGNF,EAAAA,EAAAA,KAACoC,EAAS,KACVjC,EAAAA,EAAAA,MAAC6E,EAAQ,CAAA9E,SAAA,CAAC,yBACe,KACvBF,EAAAA,EAAAA,KAACiF,EAAU,CAACW,GAAG,YAAW1F,SAAC,qBAGrB,C","sources":["components/PetBlock/PetBlock.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login/Login.styled.jsx","pages/Login/Login.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst PetBlock = ({ sources, defaultSrc, alt }) => {\r\n  return (\r\n    <>\r\n      <picture>\r\n        {sources.map((source, index) => (\r\n          <source\r\n            key={index}\r\n            srcSet={source.srcSet}\r\n            media={source.media}\r\n            width={source.width}\r\n          />\r\n        ))}\r\n        <img src={defaultSrc} alt={alt} />\r\n      </picture>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PetBlock;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TitleText = styled.p`\r\n  font-size: 28px;\r\n  font-weight: 700;\r\n  line-height: 28px;\r\n  letter-spacing: -1.12px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 54px;\r\n    line-height: 54px;\r\n    letter-spacing: -2.16px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { TitleText } from \"./Title.styled\";\r\n\r\nconst Title = ({ text }) => {\r\n  return (\r\n    <>\r\n      <TitleText>{text}</TitleText>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import styled from \"styled-components\";\r\n\r\nexport const InputWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    gap: 16px;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 12px;\r\n  color: rgba(38, 38, 38, 0.5);\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n  letter-spacing: -0.42px;\r\n  border-radius: 30px;\r\n  border: 1px solid\r\n    ${(props) => (props.haserror ? \"#ef2447\" : \"rgba(38, 38, 38, 0.15)\")};\r\n  /* border-color: ${({ secure }) =>\r\n    secure ? \"#08aa83\" : \"rgba(38, 38, 38, 0.15)\"}; */\r\n  width: 100%;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding: 16px;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    letter-spacing: -0.48px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    width: 424px;\r\n  }\r\n`;\r\n\r\nexport const Error = styled.p`\r\n  color: #ef2447;\r\n  font-size: 10px;\r\n  line-height: 12px;\r\n  letter-spacing: -0.3px;\r\n  margin-left: 12px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 12px;\r\n    line-height: 14px;\r\n    letter-spacing: -0.36px;\r\n    margin-left: 16px;\r\n    margin-top: 4px;\r\n  }\r\n`;\r\n\r\nexport const SecureMessage = styled.p`\r\n  color: #08aa83;\r\n  font-size: 10px;\r\n  line-height: 12px;\r\n  letter-spacing: -0.3px;\r\n  margin-left: 12px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 12px;\r\n    line-height: 14px;\r\n    letter-spacing: -0.36px;\r\n    margin-left: 16px;\r\n    margin-top: 4px;\r\n  }\r\n`;\r\n\r\nexport const EmailWrap = styled.div`\r\n  position: relative;\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 12px;\r\n    top: 14px;\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    svg {\r\n      right: 16px;\r\n      top: 15px;\r\n      width: 22px;\r\n      height: 22px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PasswordWrap = styled.div`\r\n  position: relative;\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 12px;\r\n    top: 14px;\r\n    width: 18px;\r\n    height: 18px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  div > svg {\r\n    position: absolute;\r\n    right: 40px;\r\n    top: 14px;\r\n    width: 18px;\r\n    height: 18px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    svg {\r\n      right: 16px;\r\n      top: 15px;\r\n      width: 22px;\r\n      height: 22px;\r\n    }\r\n\r\n    div > svg {\r\n      right: 50px;\r\n      top: 15px;\r\n      width: 22px;\r\n      height: 22px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 100%;\r\n  max-width: 295px;\r\n  height: 42px;\r\n  border-radius: 30px;\r\n  background-color: #f6b83d;\r\n  color: #ffffff;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  line-height: 18px;\r\n  letter-spacing: -0.42px;\r\n  text-transform: uppercase;\r\n  margin-top: 40px;\r\n  transition: transform 150ms linear, background-color 150ms linear;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    background-color: #f9b020;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    letter-spacing: -0.48px;\r\n    max-width: 424px;\r\n    height: 52px;\r\n    margin-top: 64px;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { logIn } from \"../../store/auth/operations\";\r\nimport sprite from \"../../images/sprite.svg\";\r\nimport {\r\n  Button,\r\n  EmailWrap,\r\n  Error,\r\n  Input,\r\n  InputWrap,\r\n  PasswordWrap,\r\n  SecureMessage,\r\n} from \"./LoginForm.styled\";\r\n\r\nconst LoginForm = () => {\r\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n  const [passwordLength, setPasswordLength] = useState(0);\r\n\r\n  const handleTogglePassword = () => {\r\n    setIsPasswordVisible((prevState) => !prevState);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setPasswordLength(event.target.value.length);\r\n  };\r\n\r\n  const schema = yup.object().shape({\r\n    email: yup\r\n      .string()\r\n      .matches(\r\n        /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/,\r\n        \"Enter a valid Email\"\r\n      )\r\n      .required(\"Enter a valid Email\"),\r\n    password: yup\r\n      .string()\r\n      .min(7, \"Password must be at least 7 characters\")\r\n      .required(\"Password is required\"),\r\n  });\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (data) => {\r\n    const { email, password } = data;\r\n    dispatch(logIn({ email, password }));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <InputWrap>\r\n        <EmailWrap>\r\n          <Input\r\n            placeholder=\"Email\"\r\n            {...register(\"email\")}\r\n            haserror={errors.email}\r\n          />\r\n          {errors.email && (\r\n            <svg>\r\n              <use href={`${sprite}#icon-cross-red`} />\r\n            </svg>\r\n          )}\r\n          {errors.email && <Error>{errors.email.message}</Error>}\r\n        </EmailWrap>\r\n\r\n        <PasswordWrap>\r\n          <Input\r\n            type={isPasswordVisible ? \"text\" : \"password\"}\r\n            placeholder=\"Password\"\r\n            {...register(\"password\")}\r\n            onChange={handlePasswordChange}\r\n            // secure={passwordLength >= 11}\r\n          />\r\n          {isPasswordVisible ? (\r\n            <svg fill=\"#f6b83d\" onClick={handleTogglePassword}>\r\n              <use href={`${sprite}#icon-eye`} />\r\n            </svg>\r\n          ) : (\r\n            <svg onClick={handleTogglePassword}>\r\n              <use href={`${sprite}#icon-eye-off`} />\r\n            </svg>\r\n          )}\r\n          {errors.password && passwordLength < 7 && (\r\n            <Error>{errors.password.message}</Error>\r\n          )}\r\n          {passwordLength >= 11 && (\r\n            <div>\r\n              <svg>\r\n                <use href={`${sprite}#icon-check`} />\r\n              </svg>\r\n              <SecureMessage>Password is secure</SecureMessage>\r\n            </div>\r\n          )}\r\n        </PasswordWrap>\r\n      </InputWrap>\r\n\r\n      <Button type=\"submit\">Log In</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const LoginWrap = styled.div`\r\n  @media screen and (min-width: 1280px) {\r\n    display: flex;\r\n    gap: 32px;\r\n    margin-bottom: 32px;\r\n  }\r\n`;\r\n\r\nexport const LoginContainer = styled.div`\r\n  border-radius: 30px;\r\n  background-color: #ffffff;\r\n  padding: 60px 20px;\r\n  margin-top: 10px;\r\n  margin-bottom: 20px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding: 71px 140px;\r\n    margin-top: 16px;\r\n    margin-bottom: 32px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    padding: 118px 84px;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n  letter-spacing: -0.28px;\r\n  margin-top: 12px;\r\n  margin-bottom: 24px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 18px;\r\n    line-height: 22px;\r\n    letter-spacing: -0.36px;\r\n    margin-top: 16px;\r\n    margin-bottom: 32px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    width: 424px;\r\n  }\r\n`;\r\n\r\nexport const LinkText = styled.p`\r\n  color: rgba(38, 38, 38, 0.5);\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  letter-spacing: -0.36px;\r\n  text-align: center;\r\n  margin-top: 12px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    letter-spacing: -0.42px;\r\n    margin-top: 16px;\r\n  }\r\n`;\r\n\r\nexport const LinkStyled = styled(Link)`\r\n  color: #f6b83d;\r\n  font-size: 12px;\r\n  font-weight: 700;\r\n  line-height: 14px;\r\n  letter-spacing: -0.36px;\r\n  text-decoration-line: underline;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    letter-spacing: -0.42px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport PetBlock from \"../../components/PetBlock/PetBlock\";\r\nimport Title from \"../../components/Title/Title\";\r\nimport LoginForm from \"../../components/LoginForm/LoginForm\";\r\nimport loginMob from \"../../images/login-mob.png\";\r\nimport loginMob2x from \"../../images/login-mob@2x.png\";\r\nimport loginTab from \"../../images/login-tab.png\";\r\nimport loginTab2x from \"../../images/login-tab@2x.png\";\r\nimport loginDesk from \"../../images/login-desk.png\";\r\nimport loginDesk2x from \"../../images/register-desk@2x.png\";\r\nimport {\r\n  LinkStyled,\r\n  LinkText,\r\n  LoginContainer,\r\n  LoginWrap,\r\n  Text,\r\n} from \"./Login.styled\";\r\n\r\nconst Login = () => {\r\n  const sources = [\r\n    {\r\n      srcSet: `${loginMob}, ${loginMob2x} 2x`,\r\n      media: \"(max-width: 767px)\",\r\n      width: 335,\r\n    },\r\n    {\r\n      srcSet: `${loginTab}, ${loginTab2x} 2x`,\r\n      media: \"(min-width: 768px) and (max-width: 1279px)\",\r\n      width: 704,\r\n    },\r\n    {\r\n      srcSet: `${loginDesk}, ${loginDesk2x} 2x`,\r\n      media: \"(min-width: 1280px)\",\r\n      width: 592,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <LoginWrap>\r\n      <PetBlock sources={sources} defaultSrc={loginDesk} alt=\"dog\" />\r\n      <LoginContainer>\r\n        <Title text=\"Log in\" />\r\n        <Text>\r\n          Welcome! Please enter your credentials to login to the platform:\r\n        </Text>\r\n        <LoginForm />\r\n        <LinkText>\r\n          Don't have an account?{\" \"}\r\n          <LinkStyled to=\"/register\">Register</LinkStyled>\r\n        </LinkText>\r\n      </LoginContainer>\r\n    </LoginWrap>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"names":["_ref","sources","defaultSrc","alt","_jsx","_Fragment","children","_jsxs","map","source","index","srcSet","media","width","src","TitleText","styled","p","_templateObject","_taggedTemplateLiteral","text","InputWrap","div","Input","input","_templateObject2","props","haserror","secure","Error","_templateObject3","SecureMessage","_templateObject4","EmailWrap","_templateObject5","PasswordWrap","_templateObject6","Button","button","_templateObject7","LoginForm","isPasswordVisible","setIsPasswordVisible","useState","passwordLength","setPasswordLength","handleTogglePassword","prevState","schema","yup","shape","email","matches","required","password","min","register","handleSubmit","formState","errors","useForm","resolver","yupResolver","dispatch","useDispatch","onSubmit","data","logIn","placeholder","href","concat","sprite","message","type","onChange","event","target","value","length","fill","onClick","LoginWrap","LoginContainer","Text","LinkText","LinkStyled","Link","Login","loginMob","loginMob2x","loginTab","loginTab2x","loginDesk","loginDesk2x","PetBlock","Title","to"],"sourceRoot":""}