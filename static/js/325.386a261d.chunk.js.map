{"version":3,"file":"static/js/325.386a261d.chunk.js","mappings":"0KAEO,MAAMA,EAAsBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gLAWhCC,EAAaJ,EAAAA,GAAOK,OAAMC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,mYAmBnCI,IAAA,IAAC,OAAEC,GAAQD,EAAA,MACA,SAAXC,IACAC,EAAAA,EAAAA,IAAGC,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,2FAIF,IAGQQ,EAAWX,EAAAA,GAAOY,KAAIC,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,+N,aCpCnC,MAmEA,EAnEmBI,IAAgD,IAA/C,YAAEO,EAAW,WAAEC,EAAU,aAAEC,GAAcT,EAC3D,MAAMU,EAAoBC,IACpBA,EAAO,GAAKA,GAAQH,GACtBC,EAAaE,EACf,EAGIC,EAAWC,OAAOC,YAAc,IAChCC,ECbsBC,EAACT,EAAaC,EAAYI,KACtD,MAAMG,EAAQ,GACRE,EAAiBL,EAAW,EAAI,EAEtC,GAAIJ,GAAcS,EAChB,IAAK,IAAIC,EAAI,EAAGA,GAAKV,EAAYU,IAC/BH,EAAMI,KAAKD,QAGb,GAAIX,GAAeU,EAAiB,EAAG,CACrC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAgBC,IAClCH,EAAMI,KAAKD,GAEbH,EAAMI,KAAK,MACb,MAAO,GAAIZ,GAAeC,GAAcS,EAAiB,GAAI,CAC3DF,EAAMI,KAAK,OACX,IAAK,IAAID,EAAIV,GAAcS,EAAiB,GAAIC,GAAKV,EAAYU,IAC/DH,EAAMI,KAAKD,EAEf,KAAO,CACLH,EAAMI,KAAK,OACX,IACE,IAAID,EAAIX,EAAc,EACtBW,GAAKX,GAAeU,EAAiB,GACrCC,IAEAH,EAAMI,KAAKD,GAEbH,EAAMI,KAAK,MACb,CAEF,OAAOJ,CAAK,EDlBEC,CAAeT,EAAaC,EAAYI,GAEtD,OACEQ,EAAAA,EAAAA,MAAC5B,EAAmB,CAAA6B,SAAA,EAClBD,EAAAA,EAAAA,MAACvB,EAAU,CACTyB,QAASA,IAAMZ,EAAiB,GAChCa,SAA0B,IAAhBhB,EAAkBc,SAAA,EAE5BG,EAAAA,EAAAA,KAAA,OAAKC,MAAM,KAAKC,OAAO,KAAIL,UACzBG,EAAAA,EAAAA,KAAA,OAAKG,KAAI,GAAAC,OAAKC,EAAAA,EAAM,yBAEtBL,EAAAA,EAAAA,KAAA,OAAKC,MAAM,KAAKC,OAAO,KAAKI,MAAO,CAAEC,WAAY,SAAUV,UACzDG,EAAAA,EAAAA,KAAA,OAAKG,KAAI,GAAAC,OAAKC,EAAAA,EAAM,4BAGxBL,EAAAA,EAAAA,KAAC3B,EAAU,CACTyB,QAASA,IAAMZ,EAAiBH,EAAc,GAC9CgB,SAA0B,IAAhBhB,EAAkBc,UAE5BG,EAAAA,EAAAA,KAAA,OAAKC,MAAM,KAAKC,OAAO,KAAIL,UACzBG,EAAAA,EAAAA,KAAA,OAAKG,KAAI,GAAAC,OAAKC,EAAAA,EAAM,0BAGvBd,EAAMiB,KAAI,CAACrB,EAAMsB,IACA,kBAATtB,GACLa,EAAAA,EAAAA,KAAC3B,EAAU,CAETyB,QAASA,IAAMZ,EAAiBC,GAChCV,QAASM,IAAgBI,GAAMuB,WAAWb,SAEzCV,GAJIsB,IAOPT,EAAAA,EAAAA,KAACpB,EAAQ,CAAAiB,SAAcV,GAARsB,MAGnBT,EAAAA,EAAAA,KAAC3B,EAAU,CACTyB,QAASA,IAAMZ,EAAiBH,EAAc,GAC9CgB,SAAUhB,IAAgBC,EAAWa,UAErCG,EAAAA,EAAAA,KAAA,OAAKC,MAAM,KAAKC,OAAO,KAAIL,UACzBG,EAAAA,EAAAA,KAAA,OAAKG,KAAI,GAAAC,OAAKC,EAAAA,EAAM,4BAGxBT,EAAAA,EAAAA,MAACvB,EAAU,CACTyB,QAASA,IAAMZ,EAAiBF,GAChCe,SAAUhB,IAAgBC,EAAWa,SAAA,EAErCG,EAAAA,EAAAA,KAAA,OAAKC,MAAM,KAAKC,OAAO,KAAIL,UACzBG,EAAAA,EAAAA,KAAA,OAAKG,KAAI,GAAAC,OAAKC,EAAAA,EAAM,0BAEtBL,EAAAA,EAAAA,KAAA,OAAKC,MAAM,KAAKC,OAAO,KAAKI,MAAO,CAAEC,WAAY,SAAUV,UACzDG,EAAAA,EAAAA,KAAA,OAAKG,KAAI,GAAAC,OAAKC,EAAAA,EAAM,8BAGJ,C,sFElEnB,MAAMM,EAAY1C,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iCAItBwC,EAAQ3C,EAAAA,GAAO4C,MAAKtC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,2eA0BpB0C,EAAe7C,EAAAA,GAAOK,OAAMK,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,iOAiB5B2C,EAAc9C,EAAAA,GAAOK,OAAMQ,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,iO,aCxCxC,MAsDA,EAtDoBI,IAAyC,IAAxC,SAAEwC,EAAQ,WAAEC,EAAU,SAAEC,GAAU1C,EACrD,MAAO2C,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAenC,OACEzB,EAAAA,EAAAA,MAACe,EAAS,CAAAd,SAAA,EACRG,EAAAA,EAAAA,KAACY,EAAK,CACJU,KAAK,OACLH,MAAOA,EACPI,YAAY,SACZC,SAnBqBC,IACzBL,EAASK,EAAMC,OAAOP,MAAM,EAmBxBb,MAAOW,KAETjB,EAAAA,EAAAA,KAACc,EAAY,CAACQ,KAAK,SAASxB,QAlBX6B,KACnBX,EAASG,EAAM,EAiBqCtB,UAChDG,EAAAA,EAAAA,KAAA,OACEC,MAAM,KACNC,OAAO,KACP0B,KAAK,OACLC,OAAO,UACPvB,MAAOY,EAASrB,UAEhBG,EAAAA,EAAAA,KAAA,OAAKG,KAAI,GAAAC,OAAKC,EAAAA,EAAM,sBAIvBc,IACCnB,EAAAA,EAAAA,KAACe,EAAW,CAACO,KAAK,SAASxB,QA3BbgC,KAClBV,EAAS,IACTJ,EAAS,GAAG,EAyBwCnB,UAC9CG,EAAAA,EAAAA,KAAA,OACEC,MAAM,KACNC,OAAO,KACP0B,KAAK,OACLC,OAAO,UACPvB,MAAOY,EAASrB,UAEhBG,EAAAA,EAAAA,KAAA,OAAKG,KAAI,GAAAC,OAAKC,EAAAA,EAAM,uBAIhB,C,0DCzDT,MAAM0B,E,QAAY9D,GAAO+D,EAAC7D,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kO,aCCjC,MAQA,EARcI,IAAe,IAAd,KAAEyD,GAAMzD,EACrB,OACEwB,EAAAA,EAAAA,KAAAkC,EAAAA,SAAA,CAAArC,UACEG,EAAAA,EAAAA,KAAC+B,EAAS,CAAAlC,SAAEoC,KACX,C,0KCLA,MAAME,EAA0BlE,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,whEAkHpCgE,EAAanE,EAAAA,GAAOC,IAAGK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,8EAMvBiE,EAAapE,EAAAA,GAAOC,IAAGS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,6FAOvBkE,EAAmBrE,EAAAA,GAAOC,IAAGY,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,gSAoB7BmE,EAAetE,EAAAA,GAAOC,IAAGsE,IAAAA,GAAApE,EAAAA,EAAAA,GAAA,6VAuBzBqE,EAAgBxE,EAAAA,GAAOC,IAAGwE,IAAAA,GAAAtE,EAAAA,EAAAA,GAAA,qbAiC1B2C,EAAc9C,EAAAA,GAAOK,OAAMqE,IAAAA,GAAAvE,EAAAA,EAAAA,GAAA,8RAsB3BwE,EAAK3E,EAAAA,GAAO4E,GAAEC,IAAAA,GAAA1E,EAAAA,EAAAA,GAAA,6FAMd2E,EAAkB9E,EAAAA,GAAO+E,GAAEC,IAAAA,GAAA7E,EAAAA,EAAAA,GAAA,i/CAgF3B8E,EAAcjF,EAAAA,GAAOK,OAAM6E,IAAAA,GAAA/E,EAAAA,EAAAA,GAAA,+V,aC1RxC,MAwNA,EAxNuBI,IAAsC,IAAD4E,EAAA,IAApC,YAAErE,EAAW,eAAEsE,GAAgB7E,EACrD,MAAM8E,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAMF,EAAAA,EAAAA,IAAYG,EAAAA,IAClBC,GAAUJ,EAAAA,EAAAA,IAAYK,EAAAA,IACtBC,GAAYN,EAAAA,EAAAA,IAAYO,EAAAA,KACvBC,EAAYC,IAAiB7C,EAAAA,EAAAA,UAAS,KAEtC8C,EAASC,IAAc/C,EAAAA,EAAAA,UAAS,CACrCgD,OAAQ,GACRC,SAAU,GACVC,OAAQ,GACRjD,KAAM,GACNkD,SAAU,GACVC,YAAa,MAGfC,EAAAA,EAAAA,YAAU,KACRpB,GAASqB,EAAAA,EAAAA,OACTrB,GAASsB,EAAAA,EAAAA,OACTtB,GAASuB,EAAAA,EAAAA,OACTvB,GAASwB,EAAAA,EAAAA,IAAa,IAAI,GACzB,CAACxB,KAEJoB,EAAAA,EAAAA,YAAU,KACRpB,GACEyB,EAAAA,EAAAA,IAAW,CACTC,QAASb,EAAQE,OACjBC,SAAUH,EAAQG,SAClBT,QAASM,EAAQ7C,KACjBqC,IAAKQ,EAAQI,OACbU,WAAYd,EAAQK,SACpBC,YAAaN,EAAQM,YACrBtF,KAAMJ,EACNmG,MAAO,IAEV,GACA,CAAC5B,EAAUa,EAASpF,IAEvB,MAAMoG,EAAqBC,GAAUjE,IACnCiD,GAAYiB,IAAW,IAClBA,EACH,CAACD,GAAOjE,MAEVkC,EAAe,EAAE,EAgBbiC,EAAeC,GAAY,CAC/B,CAAEpE,MAAO,GAAIqE,MAAO,eACV,OAAPD,QAAO,IAAPA,OAAO,EAAPA,EAAS/E,KAAKiF,IAAM,CACrBtE,MAAOsE,EACPD,OAAa,OAANC,QAAM,IAANA,OAAM,EAANA,EAAQC,OAAO,GAAGC,gBAAsB,OAANF,QAAM,IAANA,OAAM,EAANA,EAAQG,MAAM,SAI3D,IAAIC,GACU,OAAV5B,QAAU,IAAVA,OAAU,EAAVA,EAAY6B,SAAU,IACxBD,EAA6B,OAAT9B,QAAS,IAATA,OAAS,EAATA,EAAWgC,QAAQvB,GACrC,GAAApE,OAAW,OAARoE,QAAQ,IAARA,OAAQ,EAARA,EAAUwB,QAASC,cAAcC,WAAqB,OAAVjC,QAAU,IAAVA,OAAU,EAAVA,EAAYgC,kBAI/D,MAAME,EAAoC,QAApB/C,EAAGyC,SAAiB,IAAAzC,OAAA,EAAjBA,EAAmB5C,KAAKgE,IAAQ,CACvDrD,MAAM,GAADf,OAAKoE,EAAS4B,KACnBZ,MAAM,GAADpF,OAAKoE,EAAS6B,QAAO,MAAAjG,OAAKoE,EAASwB,YAOpCM,EAAeC,IAAK,IAAAC,EAAA,MACL,KAAnBrC,EAAQoC,GACJ,KACkB,QADdC,EACJlB,EAAYiB,UAAM,IAAAC,OAAA,EAAlBA,EAAoBC,MAAMhB,GAAWA,EAAOtE,QAAUgD,EAAQoC,IAAO,EAErEzE,EAAcA,KAClBsC,EAAW,CAAEK,YAAa,IAAK,EAkBjC,OACE7E,EAAAA,EAAAA,MAACuC,EAAuB,CAAAtC,SAAA,EACtBD,EAAAA,EAAAA,MAACwC,EAAU,CAAAvC,SAAA,EACTD,EAAAA,EAAAA,MAACyC,EAAU,CAAAxC,SAAA,EACTG,EAAAA,EAAAA,KAAC0G,EAAAA,EAAW,CACV1F,SAAWG,GAAUgE,EAAkB,SAAlBA,CAA4BhE,GACjDA,MAAOgD,EAAQE,OACfpD,WAAY,CACV0F,OAAQ,WACRC,YAAa,eAEf1F,SAAU,CAAE2F,IAAK,WAGnBjH,EAAAA,EAAAA,MAAC2C,EAAY,CAAA1C,SAAA,EACXG,EAAAA,EAAAA,KAAC8G,EAAAA,GAAM,CACLvB,QAASD,EAAY9B,GACrBrC,MAAOmF,EAAY,WAAYhB,EAAY9B,IAC3ChC,SAAWuF,GACT5B,EAAkB,WAAlBA,CAA8B4B,EAAWA,EAAS5F,MAAQ,IAE5DI,YAAY,WACZyF,aAAW,KAEbhH,EAAAA,EAAAA,KAAC8G,EAAAA,GAAM,CACLvB,QAASD,EAAY3B,GACrBxC,MAAOmF,EAAY,SAAUhB,EAAY3B,IACzCnC,SAAWuF,GACT5B,EAAkB,SAAlBA,CAA4B4B,EAAWA,EAAS5F,MAAQ,IAE1DI,YAAY,YACZyF,aAAW,WAKjBpH,EAAAA,EAAAA,MAAC0C,EAAgB,CAAAzC,SAAA,EACfG,EAAAA,EAAAA,KAAC8G,EAAAA,GAAM,CACLvB,QAASD,EAAYzB,GACrB1C,MAAOmF,EAAY,OAAQhB,EAAYzB,IACvCrC,SAAWuF,GACT5B,EAAkB,OAAlBA,CAA0B4B,EAAWA,EAAS5F,MAAQ,IAExDI,YAAY,UACZyF,aAAW,KAGbpH,EAAAA,EAAAA,MAAC6C,EAAa,CAAA5C,SAAA,EACZG,EAAAA,EAAAA,KAAC8G,EAAAA,GAAM,CACLvB,QAASY,EACThF,MAAOmF,EAAY,YACnBW,cA/EU9F,IACpB+F,YAAW,IAAMhD,EAAc/C,IAAQ,IAAI,EA+EjCK,SAAWuF,GACT5B,EAAkB,WAAlBA,CAA8B4B,EAAWA,EAAS5F,MAAQ,IAE5DI,YAAY,WACZyF,aAAW,KAEbhH,EAAAA,EAAAA,KAAA,OAAKC,MAAM,KAAKC,OAAO,KAAK0B,KAAK,OAAOC,OAAO,UAAShC,UACtDG,EAAAA,EAAAA,KAAA,OAAKG,KAAI,GAAAC,OAAKC,EAAAA,EAAM,oBAGrB8D,EAAQK,WACPxE,EAAAA,EAAAA,KAACe,EAAW,CAACO,KAAK,SAASxB,QA9EXqH,KAC1B/C,EAAW,CAAEI,SAAU,IAAK,EA6EsC3E,UACtDG,EAAAA,EAAAA,KAAA,OAAKC,MAAM,KAAKC,OAAO,KAAK0B,KAAK,OAAOC,OAAO,UAAShC,UACtDG,EAAAA,EAAAA,KAAA,OAAKG,KAAI,GAAAC,OAAKC,EAAAA,EAAM,+BAQhCL,EAAAA,EAAAA,KAAC4C,EAAE,KAEH5C,EAAAA,EAAAA,KAAC+C,EAAe,CAAAlD,SACb,CAAC,UAAW,YAAa,QAAS,aAAaW,KAAKiF,IACnD7F,EAAAA,EAAAA,MAAA,MAEEwH,UAAWjD,EAAQM,cAAgBgB,EAAS,UAAY,GAAG5F,SAAA,EAE3DG,EAAAA,EAAAA,KAAA,SACEsB,KAAK,QACL+F,GAAI5B,EACJL,KAAK,cACLjE,MAAOsE,EACP6B,QAASnD,EAAQM,cAAgBgB,EACjCjE,SAAUA,IAAM2D,EAAkB,cAAlBA,CAAiCM,MAEnDzF,EAAAA,EAAAA,KAAA,SAAOuH,QAAS9B,EAAO5F,SAAE4F,IACxBtB,EAAQM,cAAgBgB,IACvBzF,EAAAA,EAAAA,KAAA,UAAQsB,KAAK,SAASxB,QAASgC,EAAYjC,UACzCG,EAAAA,EAAAA,KAAA,OAAKC,MAAM,KAAKC,OAAO,KAAK0B,KAAK,UAAUC,OAAO,UAAShC,UACzDG,EAAAA,EAAAA,KAAA,OAAKG,KAAI,GAAAC,OAAKC,EAAAA,EAAM,uBAfrBoF,QAvFXtB,EAAQE,QACRF,EAAQG,UACRH,EAAQI,QACRJ,EAAQ7C,MACR6C,EAAQK,UACRL,EAAQM,eA0GNzE,EAAAA,EAAAA,KAACkD,EAAW,CAACpD,QAnKC0H,KAClBpD,EAAW,CACTC,OAAQ,GACRC,SAAU,GACVC,OAAQ,GACRjD,KAAM,GACNkD,SAAU,GACVC,YAAa,KAEfP,EAAc,IACdb,EAAe,EAAE,EAyJqBxD,SAAC,YAEb,E,gBCjPvB,MAAM4H,EAAkBxJ,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8OCYzC,EAVoBI,IAAkB,IAAjB,QAAEkJ,GAASlJ,EAC9B,OACEwB,EAAAA,EAAAA,KAACyH,EAAe,CAAA5H,SACb6H,EAAQlH,KAAKmH,IACZ3H,EAAAA,EAAAA,KAAC4H,EAAAA,EAAW,CAAkBD,OAAQA,GAApBA,EAAOvB,QAEX,E,gBCRf,MAAMyB,EAAmB5J,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,gNCmC1C,EA5BgB0J,KACd,MAAO/I,EAAasE,IAAkBhC,EAAAA,EAAAA,UAAS,GACzCrC,GAAayE,EAAAA,EAAAA,IAAYsE,EAAAA,IACzBL,GAAUjE,EAAAA,EAAAA,IAAYuE,EAAAA,IAM5B,OACEpI,EAAAA,EAAAA,MAACiI,EAAgB,CAAAhI,SAAA,EACfG,EAAAA,EAAAA,KAACiI,EAAAA,EAAK,CAAChG,KAAK,4BACZjC,EAAAA,EAAAA,KAACkI,EAAc,CACbnJ,YAAaA,EACbsE,eAAgBA,KAElBrD,EAAAA,EAAAA,KAACmI,EAAW,CAACT,QAASA,EAAQU,UAC7BpJ,EAAa,IACZgB,EAAAA,EAAAA,KAACqI,EAAAA,EAAU,CACTtJ,YAAaA,EACbC,WAAYA,EACZC,aAhBkBE,IACxBkE,EAAelE,EAAK,MAkBD,C,gFCjChB,MAAM6I,EAAiBM,GAAUA,EAAMZ,QAAQA,QAEzChE,EAAoB4E,GAAUA,EAAMZ,QAAQlE,WAE5CI,EAAiB0E,GAAUA,EAAMZ,QAAQa,QAEzCzE,EAAewE,GAAUA,EAAMZ,QAAQ7D,QAEvCG,EAAmBsE,GAAUA,EAAMZ,QAAQ3D,UAE3CgE,EAAoBO,GAAUA,EAAMZ,QAAQ1I,U","sources":["components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","helpers/getPageNumbers.js","components/SearchField/SearchField.styled.jsx","components/SearchField/SearchField.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/NoticesFilters/NoticesFilters.styled.jsx","components/NoticesFilters/NoticesFilters.jsx","components/NoticesList/NoticesList.styled.jsx","components/NoticesList/NoticesList.jsx","pages/Notices/Notices.styled.jsx","pages/Notices/Notices.jsx","store/notices/selectors.js"],"sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nexport const PaginationContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 446px;\r\n    margin: 0 auto;\r\n  }\r\n`;\r\n\r\nexport const PageButton = styled.button`\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  line-height: 18px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 1px solid rgba(38, 38, 38, 0.2);\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n\r\n  &:disabled {\r\n    border: 1px solid rgba(38, 38, 38, 0.05);\r\n    cursor: not-allowed;\r\n    opacity: 0.5;\r\n  }\r\n\r\n  ${({ active }) =>\r\n    active === \"true\" &&\r\n    css`\r\n      background-color: #f6b83d;\r\n      color: #ffffff;\r\n      border: none;\r\n    `}\r\n`;\r\n\r\nexport const Ellipsis = styled.span`\r\n  font-size: 16px;\r\n  line-height: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 40px;\r\n  height: 40px;\r\n  border: 1px solid rgba(38, 38, 38, 0.05);\r\n  border-radius: 50%;\r\n`;\r\n","import React from \"react\";\r\nimport sprite from \"../../images/sprite.svg\";\r\nimport { getPageNumbers } from \"../../helpers/getPageNumbers\";\r\nimport { Ellipsis, PageButton, PaginationContainer } from \"./Pagination.styled\";\r\n\r\nconst Pagination = ({ currentPage, totalPages, onPageChange }) => {\r\n  const handlePageChange = (page) => {\r\n    if (page > 0 && page <= totalPages) {\r\n      onPageChange(page);\r\n    }\r\n  };\r\n\r\n  const isMobile = window.innerWidth <= 767;\r\n  const pages = getPageNumbers(currentPage, totalPages, isMobile);\r\n\r\n  return (\r\n    <PaginationContainer>\r\n      <PageButton\r\n        onClick={() => handlePageChange(1)}\r\n        disabled={currentPage === 1}\r\n      >\r\n        <svg width=\"20\" height=\"20\">\r\n          <use href={`${sprite}#icon-arrow-left`} />\r\n        </svg>\r\n        <svg width=\"20\" height=\"20\" style={{ marginLeft: \"-14px\" }}>\r\n          <use href={`${sprite}#icon-arrow-left`} />\r\n        </svg>\r\n      </PageButton>\r\n      <PageButton\r\n        onClick={() => handlePageChange(currentPage - 1)}\r\n        disabled={currentPage === 1}\r\n      >\r\n        <svg width=\"20\" height=\"20\">\r\n          <use href={`${sprite}#icon-arrow-left`} />\r\n        </svg>\r\n      </PageButton>\r\n      {pages.map((page, index) =>\r\n        typeof page === \"number\" ? (\r\n          <PageButton\r\n            key={index}\r\n            onClick={() => handlePageChange(page)}\r\n            active={(currentPage === page).toString()}\r\n          >\r\n            {page}\r\n          </PageButton>\r\n        ) : (\r\n          <Ellipsis key={index}>{page}</Ellipsis>\r\n        )\r\n      )}\r\n      <PageButton\r\n        onClick={() => handlePageChange(currentPage + 1)}\r\n        disabled={currentPage === totalPages}\r\n      >\r\n        <svg width=\"20\" height=\"20\">\r\n          <use href={`${sprite}#icon-arrow-right`} />\r\n        </svg>\r\n      </PageButton>\r\n      <PageButton\r\n        onClick={() => handlePageChange(totalPages)}\r\n        disabled={currentPage === totalPages}\r\n      >\r\n        <svg width=\"20\" height=\"20\">\r\n          <use href={`${sprite}#icon-arrow-right`} />\r\n        </svg>\r\n        <svg width=\"20\" height=\"20\" style={{ marginLeft: \"-14px\" }}>\r\n          <use href={`${sprite}#icon-arrow-right`} />\r\n        </svg>\r\n      </PageButton>\r\n    </PaginationContainer>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","export const getPageNumbers = (currentPage, totalPages, isMobile) => {\r\n  const pages = [];\r\n  const maxPagesToShow = isMobile ? 3 : 4;\r\n\r\n  if (totalPages <= maxPagesToShow) {\r\n    for (let i = 1; i <= totalPages; i++) {\r\n      pages.push(i);\r\n    }\r\n  } else {\r\n    if (currentPage <= maxPagesToShow - 1) {\r\n      for (let i = 1; i < maxPagesToShow; i++) {\r\n        pages.push(i);\r\n      }\r\n      pages.push(\"...\");\r\n    } else if (currentPage >= totalPages - (maxPagesToShow - 2)) {\r\n      pages.push(\"...\");\r\n      for (let i = totalPages - (maxPagesToShow - 2); i <= totalPages; i++) {\r\n        pages.push(i);\r\n      }\r\n    } else {\r\n      pages.push(\"...\");\r\n      for (\r\n        let i = currentPage - 1;\r\n        i <= currentPage + (maxPagesToShow - 3);\r\n        i++\r\n      ) {\r\n        pages.push(i);\r\n      }\r\n      pages.push(\"...\");\r\n    }\r\n  }\r\n  return pages;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const InputWrap = styled.div`\r\n  position: relative;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  color: rgba(38, 38, 38, 0.5);\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n  letter-spacing: -0.42px;\r\n  border-radius: 30px;\r\n  border: 1px solid rgba(38, 38, 38, 0.15);\r\n  padding: 12px;\r\n  margin: 20px 0 24px;\r\n  width: 100%;\r\n\r\n  &:focus {\r\n    border: 1px solid #f6b83d;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    letter-spacing: -0.48px;\r\n    width: 230px;\r\n    height: 48px;\r\n    padding: 14px;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const ButtonSearch = styled.button`\r\n  svg {\r\n    position: absolute;\r\n    right: 12px;\r\n    top: 32px;\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    svg {\r\n      right: 14px;\r\n      top: 16px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ButtonClear = styled.button`\r\n  svg {\r\n    position: absolute;\r\n    right: 34px;\r\n    top: 32px;\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    svg {\r\n      right: 40px;\r\n      top: 16px;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport sprite from \"../../images/sprite.svg\";\r\nimport {\r\n  ButtonClear,\r\n  ButtonSearch,\r\n  Input,\r\n  InputWrap,\r\n} from \"./SearchField.styled\";\r\n\r\nconst SearchField = ({ onSearch, inputStyle, svgStyle }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleInputChange = (event) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    onSearch(value);\r\n  };\r\n\r\n  const handleClear = () => {\r\n    setValue(\"\");\r\n    onSearch(\"\");\r\n  };\r\n\r\n  return (\r\n    <InputWrap>\r\n      <Input\r\n        type=\"text\"\r\n        value={value}\r\n        placeholder=\"Search\"\r\n        onChange={handleInputChange}\r\n        style={inputStyle}\r\n      />\r\n      <ButtonSearch type=\"submit\" onClick={handleSearch}>\r\n        <svg\r\n          width=\"18\"\r\n          height=\"18\"\r\n          fill=\"none\"\r\n          stroke=\"#262626\"\r\n          style={svgStyle}\r\n        >\r\n          <use href={`${sprite}#icon-search`} />\r\n        </svg>\r\n      </ButtonSearch>\r\n\r\n      {value && (\r\n        <ButtonClear type=\"button\" onClick={handleClear}>\r\n          <svg\r\n            width=\"18\"\r\n            height=\"18\"\r\n            fill=\"none\"\r\n            stroke=\"#262626\"\r\n            style={svgStyle}\r\n          >\r\n            <use href={`${sprite}#icon-cross`} />\r\n          </svg>\r\n        </ButtonClear>\r\n      )}\r\n    </InputWrap>\r\n  );\r\n};\r\n\r\nexport default SearchField;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TitleText = styled.p`\r\n  font-size: 28px;\r\n  font-weight: 700;\r\n  line-height: 28px;\r\n  letter-spacing: -1.12px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 54px;\r\n    line-height: 54px;\r\n    letter-spacing: -2.16px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { TitleText } from \"./Title.styled\";\r\n\r\nconst Title = ({ text }) => {\r\n  return (\r\n    <>\r\n      <TitleText>{text}</TitleText>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NoticesFiltersContainer = styled.div`\r\n  margin: 40px 0 40px;\r\n  border-radius: 30px;\r\n  background-color: #fff4df;\r\n  padding: 20px;\r\n  position: relative;\r\n\r\n  .css-b62m3t-container {\r\n    width: 100%;\r\n  }\r\n\r\n  .css-13cymwt-control {\r\n    border-radius: 30px;\r\n    border-color: transparent;\r\n    height: 42px;\r\n  }\r\n\r\n  .css-13cymwt-control:hover {\r\n    border-color: transparent;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .css-t3ipsp-control {\r\n    border-radius: 30px;\r\n    border-color: transparent;\r\n    box-shadow: none;\r\n    height: 42px;\r\n  }\r\n\r\n  .css-t3ipsp-control:hover,\r\n  .css-t3ipsp-control:active {\r\n    border-radius: 30px;\r\n    border-color: transparent;\r\n  }\r\n\r\n  .css-1u9des2-indicatorSeparator {\r\n    display: none;\r\n  }\r\n\r\n  .css-1xc3v61-indicatorContainer {\r\n    padding: 12px 12px 12px 0;\r\n    color: #262626;\r\n  }\r\n\r\n  .css-1fdsijx-ValueContainer {\r\n    font-size: 14px;\r\n    line-height: 18px;\r\n    letter-spacing: -0.42px;\r\n  }\r\n\r\n  .css-tr4s17-option {\r\n    color: #f6b83d;\r\n    background-color: transparent;\r\n    padding: 0;\r\n  }\r\n\r\n  .css-10wo9uf-option {\r\n    padding: 0;\r\n  }\r\n\r\n  .css-d7l1ni-option {\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n    padding: 0;\r\n    color: #f6b83d;\r\n  }\r\n\r\n  .css-d7l1ni-option:hover,\r\n  .css-d7l1ni-option:active {\r\n    background-color: transparent;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .css-1nmdiq5-menu {\r\n    border-radius: 15px;\r\n    box-shadow: none;\r\n    margin-top: 4px;\r\n  }\r\n\r\n  .css-1n6sfyn-MenuList {\r\n    color: rgba(38, 38, 38, 0.6);\r\n    font-size: 14px;\r\n    line-height: 18px;\r\n    letter-spacing: -0.42px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 12px;\r\n    gap: 8px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin: 44px 0 32px;\r\n    padding: 40px 32px;\r\n\r\n    .css-t3ipsp-control {\r\n      height: 48px;\r\n    }\r\n\r\n    .css-13cymwt-control {\r\n      height: 48px;\r\n    }\r\n\r\n    .css-1fdsijx-ValueContainer {\r\n      font-size: 16px;\r\n      line-height: 20px;\r\n      letter-spacing: -0.48px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    margin: 40px -32px;\r\n  }\r\n`;\r\n\r\nexport const AllFilters = styled.div`\r\n  @media screen and (min-width: 1280px) {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nexport const FilterWrap = styled.div`\r\n  @media screen and (min-width: 768px) {\r\n    display: flex;\r\n    gap: 16px;\r\n  }\r\n`;\r\n\r\nexport const FilterBottomWrap = styled.div`\r\n  .css-13cymwt-control {\r\n    height: 42px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    display: flex;\r\n    gap: 16px;\r\n    margin-bottom: 20px;\r\n\r\n    .css-b62m3t-container {\r\n      width: 190px;\r\n    }\r\n\r\n    .css-13cymwt-control {\r\n      height: 48px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CategoryWrap = styled.div`\r\n  display: flex;\r\n  gap: 8px;\r\n  margin-bottom: 12px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    gap: 16px;\r\n    margin-bottom: 16px;\r\n\r\n    .css-b62m3t-container {\r\n      width: 170px;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    margin-right: 16px;\r\n\r\n    .css-b62m3t-container {\r\n      width: 200px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const LocationsWrap = styled.div`\r\n  margin: 12px 0 20px;\r\n  position: relative;\r\n\r\n  .css-tj5bde-Svg {\r\n    display: none;\r\n  }\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 12px;\r\n    top: 12px;\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin: 0;\r\n\r\n    svg {\r\n      top: 14px;\r\n    }\r\n\r\n    .css-13cymwt-control {\r\n      width: 227px;\r\n    }\r\n\r\n    .css-b62m3t-container {\r\n      width: 227px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ButtonClear = styled.button`\r\n  position: absolute;\r\n  right: 34px;\r\n  top: 12px;\r\n  width: 18px;\r\n  height: 18px;\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    svg {\r\n      top: 2px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Hr = styled.hr`\r\n  margin: 0 0 20px;\r\n  border: 0;\r\n  border-top: 1px solid rgba(38, 38, 38, 0.1);\r\n`;\r\n\r\nexport const RadioButtonWrap = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 10px;\r\n\r\n  li {\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 12px;\r\n    border-radius: 30px;\r\n    background-color: #ffffff;\r\n    font-size: 14px;\r\n    line-height: 18px;\r\n    letter-spacing: -0.42px;\r\n    transition: background-color 150ms linear, color 150ms linear;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n      background-color: #f6b83d;\r\n      color: #ffffff;\r\n    }\r\n\r\n    &.checked {\r\n      background-color: #f6b83d;\r\n      color: #ffffff;\r\n    }\r\n\r\n    input {\r\n      position: absolute;\r\n      opacity: 0;\r\n      cursor: pointer;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n\r\n    input:checked + label {\r\n      background-color: #f6b83d;\r\n      color: #ffffff;\r\n    }\r\n\r\n    label {\r\n      position: relative;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      cursor: pointer;\r\n      transition: background-color 150ms linear, color 150ms linear;\r\n    }\r\n\r\n    button {\r\n      position: relative;\r\n      z-index: 1;\r\n      background-color: none;\r\n      border: none;\r\n      cursor: pointer;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      margin-left: 6px;\r\n    }\r\n\r\n    svg {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    gap: 8px;\r\n\r\n    li {\r\n      padding: 14px;\r\n      font-size: 16px;\r\n      line-height: 20px;\r\n      letter-spacing: -0.48px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ResetButton = styled.button`\r\n  position: absolute;\r\n  bottom: 20px;\r\n  right: 20px;\r\n  color: #ffffff;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  line-height: 18px;\r\n  letter-spacing: -0.42px;\r\n  width: 100px;\r\n  height: 42px;\r\n  border-radius: 30px;\r\n  background-color: #f6b83d;\r\n  transition: transform 150ms linear;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Select from \"react-select\";\r\nimport {\r\n  selectCategories,\r\n  selectGenders,\r\n  selectLocations,\r\n  selectTypes,\r\n} from \"../../store/notices/selectors\";\r\nimport {\r\n  getCategories,\r\n  getGenders,\r\n  getLocations,\r\n  getNotices,\r\n  getTypes,\r\n} from \"../../store/notices/operations\";\r\nimport SearchField from \"../SearchField/SearchField\";\r\nimport sprite from \"../../images/sprite.svg\";\r\nimport {\r\n  AllFilters,\r\n  ButtonClear,\r\n  CategoryWrap,\r\n  FilterBottomWrap,\r\n  FilterWrap,\r\n  Hr,\r\n  LocationsWrap,\r\n  NoticesFiltersContainer,\r\n  RadioButtonWrap,\r\n  ResetButton,\r\n} from \"./NoticesFilters.styled\";\r\n\r\nconst NoticesFilters = ({ currentPage, setCurrentPage }) => {\r\n  const dispatch = useDispatch();\r\n  const categories = useSelector(selectCategories);\r\n  const sex = useSelector(selectGenders);\r\n  const species = useSelector(selectTypes);\r\n  const locations = useSelector(selectLocations);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const [filters, setFilters] = useState({\r\n    search: \"\",\r\n    category: \"\",\r\n    gender: \"\",\r\n    type: \"\",\r\n    location: \"\",\r\n    radioSearch: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    dispatch(getCategories());\r\n    dispatch(getGenders());\r\n    dispatch(getTypes());\r\n    dispatch(getLocations(\"\"));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      getNotices({\r\n        keyword: filters.search,\r\n        category: filters.category,\r\n        species: filters.type,\r\n        sex: filters.gender,\r\n        locationId: filters.location,\r\n        radioSearch: filters.radioSearch,\r\n        page: currentPage,\r\n        limit: 6,\r\n      })\r\n    );\r\n  }, [dispatch, filters, currentPage]);\r\n\r\n  const handleInputChange = (name) => (value) => {\r\n    setFilters((prevFilters) => ({\r\n      ...prevFilters,\r\n      [name]: value,\r\n    }));\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setFilters({\r\n      search: \"\",\r\n      category: \"\",\r\n      gender: \"\",\r\n      type: \"\",\r\n      location: \"\",\r\n      radioSearch: \"\",\r\n    });\r\n    setInputValue(\"\");\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  const optionsData = (options) => [\r\n    { value: \"\", label: \"Show all\" },\r\n    ...options?.map((option) => ({\r\n      value: option,\r\n      label: option?.charAt(0).toUpperCase() + option?.slice(1),\r\n    })),\r\n  ];\r\n\r\n  let filteredLocations;\r\n  if (inputValue?.length >= 3) {\r\n    filteredLocations = locations?.filter((location) =>\r\n      `${location?.cityEn}`.toLowerCase().startsWith(inputValue?.toLowerCase())\r\n    );\r\n  }\r\n\r\n  const optionsLocations = filteredLocations?.map((location) => ({\r\n    value: `${location._id}`,\r\n    label: `${location.stateEn}, ${location.cityEn}`,\r\n  }));\r\n\r\n  const handleByCity = (value) => {\r\n    setTimeout(() => setInputValue(value), 600);\r\n  };\r\n\r\n  const selectValue = (field) =>\r\n    filters[field] === \"\"\r\n      ? null\r\n      : optionsData[field]?.find((option) => option.value === filters[field]);\r\n\r\n  const handleClear = () => {\r\n    setFilters({ radioSearch: \"\" });\r\n  };\r\n\r\n  const handleClearLocation = () => {\r\n    setFilters({ location: \"\" });\r\n  };\r\n\r\n  const isAnyFilterActive = () => {\r\n    return (\r\n      filters.search ||\r\n      filters.category ||\r\n      filters.gender ||\r\n      filters.type ||\r\n      filters.location ||\r\n      filters.radioSearch\r\n    );\r\n  };\r\n\r\n  return (\r\n    <NoticesFiltersContainer>\r\n      <AllFilters>\r\n        <FilterWrap>\r\n          <SearchField\r\n            onSearch={(value) => handleInputChange(\"search\")(value)}\r\n            value={filters.search}\r\n            inputStyle={{\r\n              margin: \"0 0 12px\",\r\n              borderColor: \"transparent\",\r\n            }}\r\n            svgStyle={{ top: \"14px\" }}\r\n          />\r\n\r\n          <CategoryWrap>\r\n            <Select\r\n              options={optionsData(categories)}\r\n              value={selectValue(\"category\", optionsData(categories))}\r\n              onChange={(selected) =>\r\n                handleInputChange(\"category\")(selected ? selected.value : \"\")\r\n              }\r\n              placeholder=\"Category\"\r\n              isClearable\r\n            />\r\n            <Select\r\n              options={optionsData(sex)}\r\n              value={selectValue(\"gender\", optionsData(sex))}\r\n              onChange={(selected) =>\r\n                handleInputChange(\"gender\")(selected ? selected.value : \"\")\r\n              }\r\n              placeholder=\"By gender\"\r\n              isClearable\r\n            />\r\n          </CategoryWrap>\r\n        </FilterWrap>\r\n\r\n        <FilterBottomWrap>\r\n          <Select\r\n            options={optionsData(species)}\r\n            value={selectValue(\"type\", optionsData(species))}\r\n            onChange={(selected) =>\r\n              handleInputChange(\"type\")(selected ? selected.value : \"\")\r\n            }\r\n            placeholder=\"By type\"\r\n            isClearable\r\n          />\r\n\r\n          <LocationsWrap>\r\n            <Select\r\n              options={optionsLocations}\r\n              value={selectValue(\"location\", optionsLocations)}\r\n              onInputChange={handleByCity}\r\n              onChange={(selected) =>\r\n                handleInputChange(\"location\")(selected ? selected.value : \"\")\r\n              }\r\n              placeholder=\"Location\"\r\n              isClearable\r\n            />\r\n            <svg width=\"18\" height=\"18\" fill=\"none\" stroke=\"#262626\">\r\n              <use href={`${sprite}#icon-search`} />\r\n            </svg>\r\n\r\n            {filters.location && (\r\n              <ButtonClear type=\"button\" onClick={handleClearLocation}>\r\n                <svg width=\"18\" height=\"18\" fill=\"none\" stroke=\"#262626\">\r\n                  <use href={`${sprite}#icon-cross`} />\r\n                </svg>\r\n              </ButtonClear>\r\n            )}\r\n          </LocationsWrap>\r\n        </FilterBottomWrap>\r\n      </AllFilters>\r\n\r\n      <Hr />\r\n\r\n      <RadioButtonWrap>\r\n        {[\"Popular\", \"Unpopular\", \"Cheap\", \"Expensive\"].map((option) => (\r\n          <li\r\n            key={option}\r\n            className={filters.radioSearch === option ? \"checked\" : \"\"}\r\n          >\r\n            <input\r\n              type=\"radio\"\r\n              id={option}\r\n              name=\"radioSearch\"\r\n              value={option}\r\n              checked={filters.radioSearch === option}\r\n              onChange={() => handleInputChange(\"radioSearch\")(option)}\r\n            />\r\n            <label htmlFor={option}>{option}</label>\r\n            {filters.radioSearch === option && (\r\n              <button type=\"button\" onClick={handleClear}>\r\n                <svg width=\"18\" height=\"18\" fill=\"#ffffff\" stroke=\"#ffffff\">\r\n                  <use href={`${sprite}#icon-cross`} />\r\n                </svg>\r\n              </button>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </RadioButtonWrap>\r\n\r\n      {isAnyFilterActive() && (\r\n        <ResetButton onClick={handleReset}>Reset</ResetButton>\r\n      )}\r\n    </NoticesFiltersContainer>\r\n  );\r\n};\r\n\r\nexport default NoticesFilters;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NoticesListWrap = styled.div`\r\n  margin-bottom: 44px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 20px;\r\n    margin-bottom: 60px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    gap: 40px 32px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport NoticesItem from \"../NoticesItem/NoticesItem\";\r\nimport { NoticesListWrap } from \"./NoticesList.styled\";\r\n\r\nconst NoticesList = ({ notices }) => {\r\n  return (\r\n    <NoticesListWrap>\r\n      {notices.map((notice) => (\r\n        <NoticesItem key={notice._id} notice={notice} />\r\n      ))}\r\n    </NoticesListWrap>\r\n  );\r\n};\r\n\r\nexport default NoticesList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const NoticesContainer = styled.div`\r\n  margin: 34px 0 80px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    margin: 53px 0 88px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    width: 1153px;\r\n    margin: 64px auto 80px;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectNotices, selectTotalPages } from \"../../store/notices/selectors\";\r\nimport Title from \"../../components/Title/Title\";\r\nimport NoticesFilters from \"../../components/NoticesFilters/NoticesFilters\";\r\nimport NoticesList from \"../../components/NoticesList/NoticesList\";\r\nimport Pagination from \"../../components/Pagination/Pagination\";\r\nimport { NoticesContainer } from \"./Notices.styled\";\r\n\r\nconst Notices = () => {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const totalPages = useSelector(selectTotalPages);\r\n  const notices = useSelector(selectNotices);\r\n\r\n  const handlePageChange = (page) => {\r\n    setCurrentPage(page);\r\n  };\r\n\r\n  return (\r\n    <NoticesContainer>\r\n      <Title text=\"Find your favorite pet\" />\r\n      <NoticesFilters\r\n        currentPage={currentPage}\r\n        setCurrentPage={setCurrentPage}\r\n      />\r\n      <NoticesList notices={notices.results} />\r\n      {totalPages > 1 && (\r\n        <Pagination\r\n          currentPage={currentPage}\r\n          totalPages={totalPages}\r\n          onPageChange={handlePageChange}\r\n        />\r\n      )}\r\n    </NoticesContainer>\r\n  );\r\n};\r\n\r\nexport default Notices;\r\n","export const selectNotices = (state) => state.notices.notices;\r\n\r\nexport const selectCategories = (state) => state.notices.categories;\r\n\r\nexport const selectGenders = (state) => state.notices.genders;\r\n\r\nexport const selectTypes = (state) => state.notices.species;\r\n\r\nexport const selectLocations = (state) => state.notices.locations;\r\n\r\nexport const selectTotalPages = (state) => state.notices.totalPages;\r\n"],"names":["PaginationContainer","styled","div","_templateObject","_taggedTemplateLiteral","PageButton","button","_templateObject2","_ref","active","css","_templateObject3","Ellipsis","span","_templateObject4","currentPage","totalPages","onPageChange","handlePageChange","page","isMobile","window","innerWidth","pages","getPageNumbers","maxPagesToShow","i","push","_jsxs","children","onClick","disabled","_jsx","width","height","href","concat","sprite","style","marginLeft","map","index","toString","InputWrap","Input","input","ButtonSearch","ButtonClear","onSearch","inputStyle","svgStyle","value","setValue","useState","type","placeholder","onChange","event","target","handleSearch","fill","stroke","handleClear","TitleText","p","text","_Fragment","NoticesFiltersContainer","AllFilters","FilterWrap","FilterBottomWrap","CategoryWrap","_templateObject5","LocationsWrap","_templateObject6","_templateObject7","Hr","hr","_templateObject8","RadioButtonWrap","ul","_templateObject9","ResetButton","_templateObject10","_filteredLocations","setCurrentPage","dispatch","useDispatch","categories","useSelector","selectCategories","sex","selectGenders","species","selectTypes","locations","selectLocations","inputValue","setInputValue","filters","setFilters","search","category","gender","location","radioSearch","useEffect","getCategories","getGenders","getTypes","getLocations","getNotices","keyword","locationId","limit","handleInputChange","name","prevFilters","optionsData","options","label","option","charAt","toUpperCase","slice","filteredLocations","length","filter","cityEn","toLowerCase","startsWith","optionsLocations","_id","stateEn","selectValue","field","_optionsData$field","find","SearchField","margin","borderColor","top","Select","selected","isClearable","onInputChange","setTimeout","handleClearLocation","className","id","checked","htmlFor","handleReset","NoticesListWrap","notices","notice","NoticesItem","NoticesContainer","Notices","selectTotalPages","selectNotices","Title","NoticesFilters","NoticesList","results","Pagination","state","genders"],"sourceRoot":""}