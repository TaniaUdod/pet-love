{"version":3,"file":"static/js/640.5de58659.chunk.js","mappings":"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","sources":["components/PetBlock/PetBlock.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/RegistrationForm/RegistrationForm.styled.jsx","components/RegistrationForm/RegistrationForm.jsx","pages/Register/Register.styled.jsx","pages/Register/Register.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst PetBlock = ({ sources, defaultSrc, alt }) => {\r\n  return (\r\n    <>\r\n      <picture>\r\n        {sources.map((source, index) => (\r\n          <source\r\n            key={index}\r\n            srcSet={source.srcSet}\r\n            media={source.media}\r\n            width={source.width}\r\n          />\r\n        ))}\r\n        <img src={defaultSrc} alt={alt} />\r\n      </picture>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PetBlock;\r\n","import styled from \"styled-components\";\r\n\r\nexport const TitleText = styled.p`\r\n  font-size: 28px;\r\n  font-weight: 700;\r\n  line-height: 28px;\r\n  letter-spacing: -1.12px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 54px;\r\n    line-height: 54px;\r\n    letter-spacing: -2.16px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { TitleText } from \"./Title.styled\";\r\n\r\nconst Title = ({ text }) => {\r\n  return (\r\n    <>\r\n      <TitleText>{text}</TitleText>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import styled from \"styled-components\";\r\n\r\nexport const InputWrap = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    gap: 16px;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 12px;\r\n  color: rgba(38, 38, 38, 0.5);\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n  letter-spacing: -0.42px;\r\n  border-radius: 30px;\r\n  border: 1px solid\r\n    ${(props) => (props.haserror ? \"#ef2447\" : \"rgba(38, 38, 38, 0.15)\")};\r\n  /* border-color: ${({ secure }) =>\r\n    secure ? \"#08aa83\" : \"rgba(38, 38, 38, 0.15)\"}; */\r\n  width: 100%;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding: 16px;\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    letter-spacing: -0.48px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    width: 424px;\r\n  }\r\n`;\r\n\r\nexport const Error = styled.p`\r\n  color: #ef2447;\r\n  font-size: 10px;\r\n  line-height: 12px;\r\n  letter-spacing: -0.3px;\r\n  margin-left: 12px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 12px;\r\n    line-height: 14px;\r\n    letter-spacing: -0.36px;\r\n    margin-left: 16px;\r\n    margin-top: 4px;\r\n  }\r\n`;\r\n\r\nexport const SecureMessage = styled.p`\r\n  color: #08aa83;\r\n  font-size: 10px;\r\n  line-height: 12px;\r\n  letter-spacing: -0.3px;\r\n  margin-left: 12px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 12px;\r\n    line-height: 14px;\r\n    letter-spacing: -0.36px;\r\n    margin-left: 16px;\r\n    margin-top: 4px;\r\n  }\r\n`;\r\n\r\nexport const EmailWrap = styled.div`\r\n  position: relative;\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 12px;\r\n    top: 14px;\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    svg {\r\n      right: 16px;\r\n      top: 15px;\r\n      width: 22px;\r\n      height: 22px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const PasswordWrap = styled.div`\r\n  position: relative;\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 12px;\r\n    top: 14px;\r\n    width: 18px;\r\n    height: 18px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  div > svg {\r\n    position: absolute;\r\n    right: 40px;\r\n    top: 14px;\r\n    width: 18px;\r\n    height: 18px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    svg {\r\n      right: 16px;\r\n      top: 15px;\r\n      width: 22px;\r\n      height: 22px;\r\n    }\r\n\r\n    div > svg {\r\n      right: 50px;\r\n      top: 15px;\r\n      width: 22px;\r\n      height: 22px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 100%;\r\n  max-width: 295px;\r\n  height: 42px;\r\n  border-radius: 30px;\r\n  background-color: #f6b83d;\r\n  color: #ffffff;\r\n  font-size: 14px;\r\n  font-weight: 700;\r\n  line-height: 18px;\r\n  letter-spacing: -0.42px;\r\n  text-transform: uppercase;\r\n  margin-top: 24px;\r\n  transition: transform 150ms linear, background-color 150ms linear;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    background-color: #f9b020;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 16px;\r\n    line-height: 20px;\r\n    letter-spacing: -0.48px;\r\n    max-width: 424px;\r\n    height: 52px;\r\n    margin-top: 32px;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport * as yup from \"yup\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { register as registerUser } from \"../../store/auth/operations\";\r\nimport sprite from \"../../images/sprite.svg\";\r\nimport {\r\n  Button,\r\n  EmailWrap,\r\n  Error,\r\n  Input,\r\n  InputWrap,\r\n  PasswordWrap,\r\n  SecureMessage,\r\n} from \"./RegistrationForm.styled\";\r\n\r\nconst RegistrationForm = () => {\r\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n  const [isPasswordConfirmVisible, setIsPasswordConfirmVisible] =\r\n    useState(false);\r\n  const [passwordLength, setPasswordLength] = useState(0);\r\n\r\n  const handleTogglePassword = () => {\r\n    setIsPasswordVisible((prevState) => !prevState);\r\n  };\r\n\r\n  const handleToggleConfirmPassword = () => {\r\n    setIsPasswordConfirmVisible((prevState) => !prevState);\r\n  };\r\n\r\n  const handlePasswordChange = (event) => {\r\n    setPasswordLength(event.target.value.length);\r\n  };\r\n\r\n  const schema = yup.object().shape({\r\n    name: yup.string().required(\"Name is required\"),\r\n    email: yup\r\n      .string()\r\n      .matches(\r\n        /^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/,\r\n        \"Enter a valid Email\"\r\n      )\r\n      .required(\"Enter a valid Email\"),\r\n    password: yup\r\n      .string()\r\n      .min(7, \"Password must be at least 7 characters\")\r\n      .required(\"Password is required\"),\r\n    confirmPassword: yup\r\n      .string()\r\n      .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\r\n      .required(\"Confirm Password is required\"),\r\n  });\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (data) => {\r\n    const { confirmPassword, ...registrationData } = data;\r\n    dispatch(registerUser(registrationData));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(onSubmit)}>\r\n      <InputWrap>\r\n        <div>\r\n          <Input placeholder=\"Name\" {...register(\"name\")} />\r\n          {errors.name && <Error>{errors.name.message}</Error>}\r\n        </div>\r\n\r\n        <EmailWrap>\r\n          <Input\r\n            placeholder=\"Email\"\r\n            {...register(\"email\")}\r\n            haserror={errors.email}\r\n          />\r\n          {errors.email && (\r\n            <svg>\r\n              <use href={`${sprite}#icon-cross-red`} />\r\n            </svg>\r\n          )}\r\n          {errors.email && <Error>{errors.email.message}</Error>}\r\n        </EmailWrap>\r\n\r\n        <PasswordWrap>\r\n          <Input\r\n            type={isPasswordVisible ? \"text\" : \"password\"}\r\n            placeholder=\"Password\"\r\n            {...register(\"password\")}\r\n            onChange={handlePasswordChange}\r\n            // secure={passwordLength >= 11}\r\n          />\r\n          {isPasswordVisible ? (\r\n            <svg fill=\"#f6b83d\" onClick={handleTogglePassword}>\r\n              <use href={`${sprite}#icon-eye`} />\r\n            </svg>\r\n          ) : (\r\n            <svg onClick={handleTogglePassword}>\r\n              <use href={`${sprite}#icon-eye-off`} />\r\n            </svg>\r\n          )}\r\n          {errors.password && passwordLength < 7 && (\r\n            <Error>{errors.password.message}</Error>\r\n          )}\r\n          {passwordLength >= 11 && (\r\n            <div>\r\n              <svg>\r\n                <use href={`${sprite}#icon-check`} />\r\n              </svg>\r\n              <SecureMessage>Password is secure</SecureMessage>\r\n            </div>\r\n          )}\r\n        </PasswordWrap>\r\n\r\n        <PasswordWrap>\r\n          <Input\r\n            type={isPasswordConfirmVisible ? \"text\" : \"password\"}\r\n            placeholder=\"Confirm password\"\r\n            {...register(\"confirmPassword\")}\r\n          />\r\n          {isPasswordConfirmVisible ? (\r\n            <svg fill=\"#f6b83d\" onClick={handleToggleConfirmPassword}>\r\n              <use href={`${sprite}#icon-eye`} />\r\n            </svg>\r\n          ) : (\r\n            <svg onClick={handleToggleConfirmPassword}>\r\n              <use href={`${sprite}#icon-eye-off`} />\r\n            </svg>\r\n          )}\r\n          {errors.confirmPassword && (\r\n            <Error>{errors.confirmPassword.message}</Error>\r\n          )}\r\n        </PasswordWrap>\r\n      </InputWrap>\r\n\r\n      <Button type=\"submit\">Registration</Button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const RegisterWrap = styled.div`\r\n  @media screen and (min-width: 1280px) {\r\n    display: flex;\r\n    gap: 32px;\r\n    margin-bottom: 32px;\r\n  }\r\n`;\r\n\r\nexport const RegisterContainer = styled.div`\r\n  border-radius: 30px;\r\n  background-color: #ffffff;\r\n  padding: 27px 20px;\r\n  margin-top: 10px;\r\n  margin-bottom: 20px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    padding: 30px 140px;\r\n    margin-top: 16px;\r\n    margin-bottom: 32px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    padding: 77px 84px;\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const Text = styled.p`\r\n  font-size: 14px;\r\n  line-height: 18px;\r\n  letter-spacing: -0.28px;\r\n  margin-top: 12px;\r\n  margin-bottom: 20px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 18px;\r\n    line-height: 22px;\r\n    letter-spacing: -0.36px;\r\n    margin-top: 16px;\r\n    margin-bottom: 32px;\r\n  }\r\n`;\r\n\r\nexport const LinkText = styled.p`\r\n  color: rgba(38, 38, 38, 0.5);\r\n  font-size: 12px;\r\n  line-height: 14px;\r\n  letter-spacing: -0.36px;\r\n  text-align: center;\r\n  margin-top: 12px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    letter-spacing: -0.42px;\r\n    margin-top: 16px;\r\n  }\r\n`;\r\n\r\nexport const LinkStyled = styled(Link)`\r\n  color: #f6b83d;\r\n  font-size: 12px;\r\n  font-weight: 700;\r\n  line-height: 14px;\r\n  letter-spacing: -0.36px;\r\n  text-decoration-line: underline;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    font-size: 14px;\r\n    line-height: 20px;\r\n    letter-spacing: -0.42px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Title from \"../../components/Title/Title\";\r\nimport PetBlock from \"../../components/PetBlock/PetBlock\";\r\nimport RegistrationForm from \"../../components/RegistrationForm/RegistrationForm\";\r\nimport registerMob from \"../../images/register-mob.png\";\r\nimport registerMob2x from \"../../images/register-mob@2x.png\";\r\nimport registerTab from \"../../images/register-tab.png\";\r\nimport registerTab2x from \"../../images/register-tab@2x.png\";\r\nimport registerDesk from \"../../images/register-desk.png\";\r\nimport registerDesk2x from \"../../images/register-desk@2x.png\";\r\nimport {\r\n  LinkStyled,\r\n  LinkText,\r\n  RegisterContainer,\r\n  RegisterWrap,\r\n  Text,\r\n} from \"./Register.styled\";\r\n\r\nconst Register = () => {\r\n  const sources = [\r\n    {\r\n      srcSet: `${registerMob}, ${registerMob2x} 2x`,\r\n      media: \"(max-width: 767px)\",\r\n      width: 334,\r\n    },\r\n    {\r\n      srcSet: `${registerTab}, ${registerTab2x} 2x`,\r\n      media: \"(min-width: 768px) and (max-width: 1279px)\",\r\n      width: 704,\r\n    },\r\n    {\r\n      srcSet: `${registerDesk}, ${registerDesk2x} 2x`,\r\n      media: \"(min-width: 1280px)\",\r\n      width: 592,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <RegisterWrap>\r\n      <PetBlock sources={sources} defaultSrc={registerDesk} alt=\"cat\" />\r\n      <RegisterContainer>\r\n        <Title text=\"Registration\" />\r\n        <Text>Thank you for your interest in our platform.</Text>\r\n        <RegistrationForm />\r\n        <LinkText>\r\n          Already have an account? <LinkStyled to=\"/login\">Login</LinkStyled>\r\n        </LinkText>\r\n      </RegisterContainer>\r\n    </RegisterWrap>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"names":["_ref","sources","defaultSrc","alt","_jsx","_Fragment","children","_jsxs","map","source","index","srcSet","media","width","src","TitleText","styled","p","_templateObject","_taggedTemplateLiteral","text","InputWrap","div","Input","input","_templateObject2","props","haserror","secure","Error","_templateObject3","SecureMessage","_templateObject4","EmailWrap","_templateObject5","PasswordWrap","_templateObject6","Button","button","_templateObject7","RegistrationForm","isPasswordVisible","setIsPasswordVisible","useState","isPasswordConfirmVisible","setIsPasswordConfirmVisible","passwordLength","setPasswordLength","handleTogglePassword","prevState","handleToggleConfirmPassword","schema","yup","shape","name","required","email","matches","password","min","confirmPassword","oneOf","register","handleSubmit","formState","errors","useForm","resolver","yupResolver","dispatch","useDispatch","onSubmit","data","registrationData","registerUser","placeholder","message","href","concat","sprite","type","onChange","event","target","value","length","fill","onClick","RegisterWrap","RegisterContainer","Text","LinkText","LinkStyled","Link","Register","registerMob","registerMob2x","registerTab","registerTab2x","registerDesk","registerDesk2x","PetBlock","Title","to"],"sourceRoot":""}